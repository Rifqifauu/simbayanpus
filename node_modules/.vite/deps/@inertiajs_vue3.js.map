{
  "version": 3,
  "sources": ["../../@inertiajs/core/src/debounce.ts", "../../@inertiajs/core/src/events.ts", "../../@inertiajs/core/src/sessionStorage.ts", "../../@inertiajs/core/src/encryption.ts", "../../@inertiajs/core/src/scroll.ts", "../../@inertiajs/core/src/url.ts", "../../@inertiajs/core/src/files.ts", "../../@inertiajs/core/src/formData.ts", "../../@inertiajs/core/src/page.ts", "../../@inertiajs/core/src/history.ts", "../../@inertiajs/core/src/eventHandler.ts", "../../@inertiajs/core/src/navigationType.ts", "../../@inertiajs/core/src/initialVisit.ts", "../../@inertiajs/core/src/poll.ts", "../../@inertiajs/core/src/polls.ts", "../../@inertiajs/core/src/objectUtils.ts", "../../@inertiajs/core/src/time.ts", "../../@inertiajs/core/src/prefetched.ts", "../../@inertiajs/core/src/request.ts", "../../@inertiajs/core/src/requestParams.ts", "../../@inertiajs/core/src/modal.ts", "../../@inertiajs/core/src/response.ts", "../../@inertiajs/core/src/requestStream.ts", "../../@inertiajs/core/src/router.ts", "../../@inertiajs/core/src/head.ts", "../../@inertiajs/core/src/progress-component.ts", "../../@inertiajs/core/src/progress.ts", "../../@inertiajs/core/src/shouldIntercept.ts", "../../@inertiajs/core/src/index.ts", "../../@inertiajs/vue3/src/index.ts", "../../@inertiajs/vue3/src/app.ts", "../../@inertiajs/vue3/src/remember.ts", "../../@inertiajs/vue3/src/useForm.ts", "../../@inertiajs/vue3/src/createInertiaApp.ts", "../../@inertiajs/vue3/src/deferred.ts", "../../@inertiajs/vue3/src/head.ts", "../../@inertiajs/vue3/src/link.ts", "../../@inertiajs/vue3/src/usePoll.ts", "../../@inertiajs/vue3/src/usePrefetch.ts", "../../@inertiajs/vue3/src/useRemember.ts", "../../@inertiajs/vue3/src/whenVisible.ts"],
  "sourcesContent": ["export default function debounce<F extends (...params: any[]) => ReturnType<F>>(fn: F, delay: number): F {\n  let timeoutID: NodeJS.Timeout\n  return function (...args: unknown[]) {\n    clearTimeout(timeoutID)\n    timeoutID = setTimeout(() => fn.apply(this, args), delay)\n  } as F\n}\n", "import { GlobalEventDetails, GlobalEventNames, GlobalEventTrigger } from './types'\n\nfunction fireEvent<TEventName extends GlobalEventNames>(\n  name: TEventName,\n  options: CustomEventInit<GlobalEventDetails<TEventName>>,\n): boolean {\n  return document.dispatchEvent(new CustomEvent(`inertia:${name}`, options))\n}\n\nexport const fireBeforeEvent: GlobalEventTrigger<'before'> = (visit) => {\n  return fireEvent('before', { cancelable: true, detail: { visit } })\n}\n\nexport const fireErrorEvent: GlobalEventTrigger<'error'> = (errors) => {\n  return fireEvent('error', { detail: { errors } })\n}\n\nexport const fireExceptionEvent: GlobalEventTrigger<'exception'> = (exception) => {\n  return fireEvent('exception', { cancelable: true, detail: { exception } })\n}\n\nexport const fireFinishEvent: GlobalEventTrigger<'finish'> = (visit) => {\n  return fireEvent('finish', { detail: { visit } })\n}\n\nexport const fireInvalidEvent: GlobalEventTrigger<'invalid'> = (response) => {\n  return fireEvent('invalid', { cancelable: true, detail: { response } })\n}\n\nexport const fireNavigateEvent: GlobalEventTrigger<'navigate'> = (page) => {\n  return fireEvent('navigate', { detail: { page } })\n}\n\nexport const fireProgressEvent: GlobalEventTrigger<'progress'> = (progress) => {\n  return fireEvent('progress', { detail: { progress } })\n}\n\nexport const fireStartEvent: GlobalEventTrigger<'start'> = (visit) => {\n  return fireEvent('start', { detail: { visit } })\n}\n\nexport const fireSuccessEvent: GlobalEventTrigger<'success'> = (page) => {\n  return fireEvent('success', { detail: { page } })\n}\n\nexport const firePrefetchedEvent: GlobalEventTrigger<'prefetched'> = (response, visit) => {\n  return fireEvent('prefetched', { detail: { fetchedAt: Date.now(), response: response.data, visit } })\n}\n\nexport const firePrefetchingEvent: GlobalEventTrigger<'prefetching'> = (visit) => {\n  return fireEvent('prefetching', { detail: { visit } })\n}\n", "export class SessionStorage {\n  public static locationVisitKey = 'inertiaLocationVisit'\n\n  public static set(key: string, value: any): void {\n    if (typeof window !== 'undefined') {\n      window.sessionStorage.setItem(key, JSON.stringify(value))\n    }\n  }\n\n  public static get(key: string): any {\n    if (typeof window !== 'undefined') {\n      return JSON.parse(window.sessionStorage.getItem(key) || 'null')\n    }\n  }\n\n  public static merge(key: string, value: any): void {\n    const existing = this.get(key)\n\n    if (existing === null) {\n      this.set(key, value)\n    } else {\n      this.set(key, { ...existing, ...value })\n    }\n  }\n\n  public static remove(key: string): void {\n    if (typeof window !== 'undefined') {\n      window.sessionStorage.removeItem(key)\n    }\n  }\n\n  public static removeNested(key: string, nestedKey: string): void {\n    const existing = this.get(key)\n\n    if (existing !== null) {\n      delete existing[nestedKey]\n\n      this.set(key, existing)\n    }\n  }\n\n  public static exists(key: string): boolean {\n    try {\n      return this.get(key) !== null\n    } catch (error) {\n      return false\n    }\n  }\n\n  public static clear(): void {\n    if (typeof window !== 'undefined') {\n      window.sessionStorage.clear()\n    }\n  }\n}\n", "import { SessionStorage } from './sessionStorage'\n\nexport const encryptHistory = async (data: any): Promise<ArrayBuffer> => {\n  if (typeof window === 'undefined') {\n    throw new Error('Unable to encrypt history')\n  }\n\n  const iv = getIv()\n  const storedKey = await getKeyFromSessionStorage()\n  const key = await getOrCreateKey(storedKey)\n\n  if (!key) {\n    throw new Error('Unable to encrypt history')\n  }\n\n  const encrypted = await encryptData(iv, key, data)\n\n  return encrypted\n}\n\nexport const historySessionStorageKeys = {\n  key: 'historyKey',\n  iv: 'historyIv',\n}\n\nexport const decryptHistory = async (data: any): Promise<any> => {\n  const iv = getIv()\n  const storedKey = await getKeyFromSessionStorage()\n\n  if (!storedKey) {\n    throw new Error('Unable to decrypt history')\n  }\n\n  return await decryptData(iv, storedKey, data)\n}\n\nconst encryptData = async (iv: Uint8Array, key: CryptoKey, data: any) => {\n  if (typeof window === 'undefined') {\n    throw new Error('Unable to encrypt history')\n  }\n\n  if (typeof window.crypto.subtle === 'undefined') {\n    console.warn('Encryption is not supported in this environment. SSL is required.')\n\n    return Promise.resolve(data)\n  }\n\n  const textEncoder = new TextEncoder()\n  const str = JSON.stringify(data)\n  const encoded = new Uint8Array(str.length * 3)\n\n  const result = textEncoder.encodeInto(str, encoded)\n\n  return window.crypto.subtle.encrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    encoded.subarray(0, result.written),\n  )\n}\n\nconst decryptData = async (iv: Uint8Array, key: CryptoKey, data: any) => {\n  if (typeof window.crypto.subtle === 'undefined') {\n    console.warn('Decryption is not supported in this environment. SSL is required.')\n\n    return Promise.resolve(data)\n  }\n\n  const decrypted = await window.crypto.subtle.decrypt(\n    {\n      name: 'AES-GCM',\n      iv,\n    },\n    key,\n    data,\n  )\n\n  return JSON.parse(new TextDecoder().decode(decrypted))\n}\n\nconst getIv = () => {\n  const ivString = SessionStorage.get(historySessionStorageKeys.iv)\n\n  if (ivString) {\n    return new Uint8Array(ivString)\n  }\n\n  const iv = window.crypto.getRandomValues(new Uint8Array(12))\n\n  SessionStorage.set(historySessionStorageKeys.iv, Array.from(iv))\n\n  return iv\n}\n\nconst createKey = async () => {\n  if (typeof window.crypto.subtle === 'undefined') {\n    console.warn('Encryption is not supported in this environment. SSL is required.')\n\n    return Promise.resolve(null)\n  }\n\n  return window.crypto.subtle.generateKey(\n    {\n      name: 'AES-GCM',\n      length: 256,\n    },\n    true,\n    ['encrypt', 'decrypt'],\n  )\n}\n\nconst saveKey = async (key: CryptoKey) => {\n  if (typeof window.crypto.subtle === 'undefined') {\n    console.warn('Encryption is not supported in this environment. SSL is required.')\n\n    return Promise.resolve()\n  }\n\n  const keyData = await window.crypto.subtle.exportKey('raw', key)\n\n  SessionStorage.set(historySessionStorageKeys.key, Array.from(new Uint8Array(keyData)))\n}\n\nconst getOrCreateKey = async (key: CryptoKey | null) => {\n  if (key) {\n    return key\n  }\n\n  const newKey = await createKey()\n\n  if (!newKey) {\n    return null\n  }\n\n  await saveKey(newKey)\n\n  return newKey\n}\n\nconst getKeyFromSessionStorage = async (): Promise<CryptoKey | null> => {\n  const stringKey = SessionStorage.get(historySessionStorageKeys.key)\n\n  if (!stringKey) {\n    return null\n  }\n\n  const key = await window.crypto.subtle.importKey(\n    'raw',\n    new Uint8Array(stringKey),\n    {\n      name: 'AES-GCM',\n      length: 256,\n    },\n    true,\n    ['encrypt', 'decrypt'],\n  )\n\n  return key\n}\n", "import { history } from './history'\nimport { page as currentPage } from './page'\nimport { Page } from './types'\n\nexport class Scroll {\n  public static save(page: Page): void {\n    history.replaceState({\n      ...page,\n      scrollRegions: Array.from(this.regions()).map((region) => ({\n        top: region.scrollTop,\n        left: region.scrollLeft,\n      })),\n    })\n  }\n\n  protected static regions(): NodeListOf<Element> {\n    return document.querySelectorAll('[scroll-region]')\n  }\n\n  public static reset(page: Page): void {\n    if (typeof window !== 'undefined') {\n      window.scrollTo(0, 0)\n    }\n\n    this.regions().forEach((region) => {\n      if (typeof region.scrollTo === 'function') {\n        region.scrollTo(0, 0)\n      } else {\n        region.scrollTop = 0\n        region.scrollLeft = 0\n      }\n    })\n\n    this.save(page)\n\n    if (window.location.hash) {\n      // We're using a setTimeout() here as a workaround for a bug in the React adapter where the\n      // rendering isn't completing fast enough, causing the anchor link to not be scrolled to.\n      setTimeout(() => document.getElementById(window.location.hash.slice(1))?.scrollIntoView())\n    }\n  }\n\n  public static restore(page: Page): void {\n    if (!page.scrollRegions) {\n      return\n    }\n\n    this.regions().forEach((region: Element, index: number) => {\n      const scrollPosition = page.scrollRegions[index]\n\n      if (!scrollPosition) {\n        return\n      }\n\n      if (typeof region.scrollTo === 'function') {\n        region.scrollTo(scrollPosition.left, scrollPosition.top)\n      } else {\n        region.scrollTop = scrollPosition.top\n        region.scrollLeft = scrollPosition.left\n      }\n    })\n  }\n\n  public static onScroll(event: Event): void {\n    const target = event.target as Element\n\n    if (typeof target.hasAttribute === 'function' && target.hasAttribute('scroll-region')) {\n      this.save(currentPage.get())\n    }\n  }\n}\n", "import deepmerge from 'deepmerge'\nimport * as qs from 'qs'\nimport { hasFiles } from './files'\nimport { isFormData, objectToFormData } from './formData'\nimport { FormDataConvertible, Method, RequestPayload, VisitOptions } from './types'\n\nexport function hrefToUrl(href: string | URL): URL {\n  return new URL(href.toString(), typeof window === 'undefined' ? undefined : window.location.toString())\n}\n\nexport const transformUrlAndData = (\n  href: string | URL,\n  data: RequestPayload,\n  method: Method,\n  forceFormData: VisitOptions['forceFormData'],\n  queryStringArrayFormat: VisitOptions['queryStringArrayFormat'],\n): [URL, RequestPayload] => {\n  let url = typeof href === 'string' ? hrefToUrl(href) : href\n\n  if ((hasFiles(data) || forceFormData) && !isFormData(data)) {\n    data = objectToFormData(data)\n  }\n\n  if (isFormData(data)) {\n    return [url, data]\n  }\n\n  const [_href, _data] = mergeDataIntoQueryString(method, url, data, queryStringArrayFormat)\n\n  return [hrefToUrl(_href), _data]\n}\n\nexport function mergeDataIntoQueryString(\n  method: Method,\n  href: URL | string,\n  data: Record<string, FormDataConvertible>,\n  qsArrayFormat: 'indices' | 'brackets' = 'brackets',\n): [string, Record<string, FormDataConvertible>] {\n  const hasHost = /^https?:\\/\\//.test(href.toString())\n  const hasAbsolutePath = hasHost || href.toString().startsWith('/')\n  const hasRelativePath = !hasAbsolutePath && !href.toString().startsWith('#') && !href.toString().startsWith('?')\n  const hasSearch = href.toString().includes('?') || (method === 'get' && Object.keys(data).length)\n  const hasHash = href.toString().includes('#')\n\n  const url = new URL(href.toString(), 'http://localhost')\n\n  if (method === 'get' && Object.keys(data).length) {\n    url.search = qs.stringify(deepmerge(qs.parse(url.search, { ignoreQueryPrefix: true }), data), {\n      encodeValuesOnly: true,\n      arrayFormat: qsArrayFormat,\n    })\n    data = {}\n  }\n\n  return [\n    [\n      hasHost ? `${url.protocol}//${url.host}` : '',\n      hasAbsolutePath ? url.pathname : '',\n      hasRelativePath ? url.pathname.substring(1) : '',\n      hasSearch ? url.search : '',\n      hasHash ? url.hash : '',\n    ].join(''),\n    data,\n  ]\n}\n\nexport function urlWithoutHash(url: URL | Location): URL {\n  url = new URL(url.href)\n  url.hash = ''\n  return url\n}\n\nexport const setHashIfSameUrl = (originUrl: URL | Location, destinationUrl: URL | Location) => {\n  if (originUrl.hash && !destinationUrl.hash && urlWithoutHash(originUrl).href === destinationUrl.href) {\n    destinationUrl.hash = originUrl.hash\n  }\n}\n\nexport const isSameUrlWithoutHash = (url1: URL | Location, url2: URL | Location): boolean => {\n  return urlWithoutHash(url1).href === urlWithoutHash(url2).href\n}\n", "import { FormDataConvertible, RequestPayload } from './types'\n\nexport function hasFiles(data: RequestPayload | FormDataConvertible): boolean {\n  return (\n    data instanceof File ||\n    data instanceof Blob ||\n    (data instanceof FileList && data.length > 0) ||\n    (data instanceof FormData && Array.from(data.values()).some((value) => hasFiles(value))) ||\n    (typeof data === 'object' && data !== null && Object.values(data).some((value) => hasFiles(value)))\n  )\n}\n", "import { FormDataConvertible } from './types'\n\nexport const isFormData = (value: any): value is FormData => value instanceof FormData\n\nexport function objectToFormData(\n  source: Record<string, FormDataConvertible>,\n  form: FormData = new FormData(),\n  parentKey: string | null = null,\n): FormData {\n  source = source || {}\n\n  for (const key in source) {\n    if (Object.prototype.hasOwnProperty.call(source, key)) {\n      append(form, composeKey(parentKey, key), source[key])\n    }\n  }\n\n  return form\n}\n\nfunction composeKey(parent: string | null, key: string): string {\n  return parent ? parent + '[' + key + ']' : key\n}\n\nfunction append(form: FormData, key: string, value: FormDataConvertible): void {\n  if (Array.isArray(value)) {\n    return Array.from(value.keys()).forEach((index) => append(form, composeKey(key, index.toString()), value[index]))\n  } else if (value instanceof Date) {\n    return form.append(key, value.toISOString())\n  } else if (value instanceof File) {\n    return form.append(key, value, value.name)\n  } else if (value instanceof Blob) {\n    return form.append(key, value)\n  } else if (typeof value === 'boolean') {\n    return form.append(key, value ? '1' : '0')\n  } else if (typeof value === 'string') {\n    return form.append(key, value)\n  } else if (typeof value === 'number') {\n    return form.append(key, `${value}`)\n  } else if (value === null || value === undefined) {\n    return form.append(key, '')\n  }\n\n  objectToFormData(value, form, key)\n}\n", "import { eventHandler } from './eventHandler'\nimport { fireNavigateEvent } from './events'\nimport { history } from './history'\nimport { Scroll } from './scroll'\nimport {\n  Component,\n  Page,\n  PageEvent,\n  PageHandler,\n  PageResolver,\n  PreserveStateOption,\n  RouterInitParams,\n  VisitOptions,\n} from './types'\nimport { hrefToUrl, isSameUrlWithoutHash } from './url'\n\nclass CurrentPage {\n  protected page!: Page\n  protected swapComponent!: PageHandler\n  protected resolveComponent!: PageResolver\n  protected componentId = {}\n  protected listeners: {\n    event: PageEvent\n    callback: VoidFunction\n  }[] = []\n  protected isFirstPageLoad = true\n  protected cleared = false\n\n  public init({ initialPage, swapComponent, resolveComponent }: RouterInitParams) {\n    this.page = initialPage\n    this.swapComponent = swapComponent\n    this.resolveComponent = resolveComponent\n\n    return this\n  }\n\n  public set(\n    page: Page,\n    {\n      replace = false,\n      preserveScroll = false,\n      preserveState = false,\n    }: Partial<Pick<VisitOptions, 'replace' | 'preserveScroll' | 'preserveState'>> = {},\n  ): Promise<void> {\n    this.componentId = {}\n\n    const componentId = this.componentId\n\n    if (page.clearHistory) {\n      history.clear()\n    }\n\n    return this.resolve(page.component).then((component) => {\n      if (componentId !== this.componentId) {\n        // Component has changed since we started resolving this component, bail\n        return\n      }\n\n      page.scrollRegions ??= []\n      page.rememberedState ??= {}\n      const location = typeof window !== 'undefined' ? window.location : new URL(page.url)\n      replace = replace || isSameUrlWithoutHash(hrefToUrl(page.url), location)\n\n      return new Promise((resolve) => {\n        replace ? history.replaceState(page, () => resolve(null)) : history.pushState(page, () => resolve(null))\n      }).then(() => {\n        const isNewComponent = !this.isTheSame(page)\n\n        this.page = page\n        this.cleared = false\n\n        if (isNewComponent) {\n          this.fireEventsFor('newComponent')\n        }\n\n        if (this.isFirstPageLoad) {\n          this.fireEventsFor('firstLoad')\n        }\n\n        this.isFirstPageLoad = false\n\n        return this.swap({ component, page, preserveState }).then(() => {\n          if (!preserveScroll) {\n            Scroll.reset(page)\n          }\n\n          eventHandler.fireInternalEvent('loadDeferredProps')\n\n          if (!replace) {\n            fireNavigateEvent(page)\n          }\n        })\n      })\n    })\n  }\n\n  public setQuietly(\n    page: Page,\n    {\n      preserveState = false,\n    }: {\n      preserveState?: PreserveStateOption\n    } = {},\n  ) {\n    return this.resolve(page.component).then((component) => {\n      this.page = page\n      this.cleared = false\n      return this.swap({ component, page, preserveState })\n    })\n  }\n\n  public clear(): void {\n    this.cleared = true\n  }\n\n  public isCleared(): boolean {\n    return this.cleared\n  }\n\n  public get(): Page {\n    return this.page\n  }\n\n  public merge(data: Partial<Page>): void {\n    this.page = { ...this.page, ...data }\n  }\n\n  public setUrlHash(hash: string): void {\n    this.page.url += hash\n  }\n\n  public remember(data: Page['rememberedState']): void {\n    this.page.rememberedState = data\n  }\n\n  public scrollRegions(regions: Page['scrollRegions']): void {\n    this.page.scrollRegions = regions\n  }\n\n  public swap({\n    component,\n    page,\n    preserveState,\n  }: {\n    component: Component\n    page: Page\n    preserveState: PreserveStateOption\n  }): Promise<unknown> {\n    return this.swapComponent({ component, page, preserveState })\n  }\n\n  public resolve(component: string): Promise<Component> {\n    return Promise.resolve(this.resolveComponent(component))\n  }\n\n  public isTheSame(page: Page): boolean {\n    return this.page.component === page.component\n  }\n\n  public on(event: PageEvent, callback: VoidFunction): VoidFunction {\n    this.listeners.push({ event, callback })\n\n    return () => {\n      this.listeners = this.listeners.filter((listener) => listener.event !== event && listener.callback !== callback)\n    }\n  }\n\n  public fireEventsFor(event: PageEvent): void {\n    this.listeners.filter((listener) => listener.event === event).forEach((listener) => listener.callback())\n  }\n}\n\nexport const page = new CurrentPage()\n", "import { decryptHistory, encryptHistory, historySessionStorageKeys } from './encryption'\nimport { page as currentPage } from './page'\nimport { SessionStorage } from './sessionStorage'\nimport { Page } from './types'\n\nconst isServer = typeof window === 'undefined'\n\nclass History {\n  public rememberedState = 'rememberedState' as const\n  public scrollRegions = 'scrollRegions' as const\n  public preserveUrl = false\n  protected current: Partial<Page> = {}\n  protected queue: (() => Promise<void>)[] = []\n  // We need initialState for `restore`\n  protected initialState: Partial<Page> | null = null\n\n  public remember(data: unknown, key: string): void {\n    this.replaceState({\n      ...currentPage.get(),\n      rememberedState: {\n        ...(currentPage.get()?.rememberedState ?? {}),\n        [key]: data,\n      },\n    })\n  }\n\n  public restore(key: string): unknown {\n    if (!isServer) {\n      return this.initialState?.[this.rememberedState]?.[key]\n    }\n  }\n\n  public pushState(page: Page, cb: (() => void) | null = null): void {\n    if (isServer || this.preserveUrl) {\n      return\n    }\n\n    this.current = page\n\n    this.addToQueue(() => {\n      return this.getPageData(page).then((data) => {\n        window.history.pushState(\n          {\n            page: data,\n            timestamp: Date.now(),\n          },\n          '',\n          page.url,\n        )\n\n        cb && cb()\n      })\n    })\n  }\n\n  protected getPageData(page: Page): Promise<Page | ArrayBuffer> {\n    return new Promise((resolve) => {\n      return page.encryptHistory ? encryptHistory(page).then(resolve) : resolve(page)\n    })\n  }\n\n  public processQueue(): Promise<void> {\n    const next = this.queue.shift()\n\n    if (next) {\n      return next().then(() => this.processQueue())\n    }\n\n    return Promise.resolve()\n  }\n\n  public decrypt(page: Page | null = null): Promise<Page> {\n    if (isServer) {\n      return Promise.resolve(page ?? currentPage.get())\n    }\n\n    const pageData = page ?? window.history.state?.page\n\n    return this.decryptPageData(pageData).then((data) => {\n      if (!data) {\n        throw new Error('Unable to decrypt history')\n      }\n\n      if (this.initialState === null) {\n        this.initialState = data ?? undefined\n      } else {\n        this.current = data ?? {}\n      }\n\n      return data\n    })\n  }\n\n  protected decryptPageData(pageData: ArrayBuffer | Page | null): Promise<Page | null> {\n    return pageData instanceof ArrayBuffer ? decryptHistory(pageData) : Promise.resolve(pageData)\n  }\n\n  public replaceState(page: Page, cb: (() => void) | null = null): void {\n    currentPage.merge(page)\n\n    if (isServer || this.preserveUrl) {\n      return\n    }\n\n    this.current = page\n\n    this.addToQueue(() => {\n      return this.getPageData(page).then((data) => {\n        window.history.replaceState(\n          {\n            page: data,\n            timestamp: Date.now(),\n          },\n          '',\n          page.url,\n        )\n\n        cb && cb()\n      })\n    })\n  }\n\n  protected addToQueue(fn: () => Promise<void>): void {\n    this.queue.push(fn)\n    this.processQueue()\n  }\n\n  public getState<T>(key: keyof Page, defaultValue?: T): any {\n    return this.current?.[key] ?? defaultValue\n  }\n\n  public deleteState(key: keyof Page) {\n    if (this.current[key] !== undefined) {\n      delete this.current[key]\n      this.replaceState(this.current as Page)\n    }\n  }\n\n  public hasAnyState(): boolean {\n    return !!this.getAllState()\n  }\n\n  public clear() {\n    SessionStorage.remove(historySessionStorageKeys.key)\n    SessionStorage.remove(historySessionStorageKeys.iv)\n  }\n\n  public isValidState(state: any): boolean {\n    return !!state.page\n  }\n\n  public getAllState(): Page {\n    return this.current as Page\n  }\n}\n\nexport const history = new History()\n", "import debounce from './debounce'\nimport { fireNavigateEvent } from './events'\nimport { history } from './history'\nimport { page as currentPage } from './page'\nimport { Scroll } from './scroll'\nimport { GlobalEvent, GlobalEventNames, GlobalEventResult, InternalEvent } from './types'\nimport { hrefToUrl } from './url'\n\nclass EventHandler {\n  protected internalListeners: {\n    event: InternalEvent\n    listener: VoidFunction\n  }[] = []\n\n  public init() {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('popstate', this.handlePopstateEvent.bind(this))\n    }\n\n    if (typeof document !== 'undefined') {\n      document.addEventListener('scroll', debounce(Scroll.onScroll.bind(Scroll), 100), true)\n    }\n  }\n\n  public onGlobalEvent<TEventName extends GlobalEventNames>(\n    type: TEventName,\n    callback: (event: GlobalEvent<TEventName>) => GlobalEventResult<TEventName>,\n  ): VoidFunction {\n    const listener = ((event: GlobalEvent<TEventName>) => {\n      const response = callback(event)\n\n      if (event.cancelable && !event.defaultPrevented && response === false) {\n        event.preventDefault()\n      }\n    }) as EventListener\n\n    return this.registerListener(`inertia:${type}`, listener)\n  }\n\n  public on(event: InternalEvent, callback: VoidFunction): VoidFunction {\n    this.internalListeners.push({ event, listener: callback })\n\n    return () => {\n      this.internalListeners = this.internalListeners.filter((listener) => listener.listener !== callback)\n    }\n  }\n\n  public onMissingHistoryItem() {\n    // At this point, the user has probably cleared the state\n    // Mark the current page as cleared so that we don't try to write anything to it.\n    currentPage.clear()\n    // Fire an event so that that any listeners can handle this situation\n    this.fireInternalEvent('missingHistoryItem')\n  }\n\n  public fireInternalEvent(event: InternalEvent): void {\n    this.internalListeners.filter((listener) => listener.event === event).forEach((listener) => listener.listener())\n  }\n\n  protected registerListener(type: string, listener: EventListener): VoidFunction {\n    document.addEventListener(type, listener)\n\n    return () => document.removeEventListener(type, listener)\n  }\n\n  protected handlePopstateEvent(event: PopStateEvent): void {\n    const state = event.state || null\n\n    if (state === null) {\n      const url = hrefToUrl(currentPage.get().url)\n      url.hash = window.location.hash\n\n      history.replaceState({ ...currentPage.get(), url: url.href })\n      Scroll.reset(currentPage.get())\n\n      return\n    }\n\n    if (history.isValidState(state)) {\n      history\n        .decrypt(state.page)\n        .then((data) => {\n          currentPage.setQuietly(data, { preserveState: false }).then(() => {\n            Scroll.restore(currentPage.get())\n            fireNavigateEvent(currentPage.get())\n          })\n        })\n        .catch(() => {\n          this.onMissingHistoryItem()\n        })\n\n      return\n    }\n\n    this.onMissingHistoryItem()\n  }\n}\n\nexport const eventHandler = new EventHandler()\n", "class NavigationType {\n  protected type: NavigationTimingType\n\n  public constructor() {\n    if (typeof window !== 'undefined' && window?.performance.getEntriesByType('navigation').length > 0) {\n      this.type = (window.performance.getEntriesByType('navigation')[0] as PerformanceNavigationTiming).type\n    } else {\n      this.type = 'navigate'\n    }\n  }\n\n  public get(): NavigationTimingType {\n    return this.type\n  }\n\n  public isBackForward(): boolean {\n    return this.type === 'back_forward'\n  }\n\n  public isReload(): boolean {\n    return this.type === 'reload'\n  }\n}\n\nexport const navigationType = new NavigationType()\n", "import { eventHandler } from './eventHandler'\nimport { fireNavigateEvent } from './events'\nimport { history } from './history'\nimport { navigationType } from './navigationType'\nimport { page as currentPage } from './page'\nimport { Scroll } from './scroll'\nimport { SessionStorage } from './sessionStorage'\nimport { LocationVisit, Page } from './types'\n\nexport class InitialVisit {\n  public static handle(): void {\n    this.clearRememberedStateOnReload()\n\n    const scenarios = [this.handleBackForward, this.handleLocation, this.handleDefault]\n\n    scenarios.find((handler) => handler.bind(this)())\n  }\n\n  protected static clearRememberedStateOnReload(): void {\n    if (navigationType.isReload()) {\n      history.deleteState(history.rememberedState)\n    }\n  }\n\n  protected static handleBackForward(): boolean {\n    if (!navigationType.isBackForward() || !history.hasAnyState()) {\n      return false\n    }\n\n    history\n      .decrypt()\n      .then((data) => {\n        currentPage.set(data, { preserveScroll: true, preserveState: true }).then(() => {\n          Scroll.restore(currentPage.get())\n          fireNavigateEvent(currentPage.get())\n        })\n      })\n      .catch(() => {\n        eventHandler.onMissingHistoryItem()\n      })\n\n    return true\n  }\n\n  /**\n   * @link https://inertiajs.com/redirects#external-redirects\n   */\n  protected static handleLocation(): boolean {\n    if (!SessionStorage.exists(SessionStorage.locationVisitKey)) {\n      return false\n    }\n\n    const locationVisit: LocationVisit = SessionStorage.get(SessionStorage.locationVisitKey) || {}\n\n    SessionStorage.remove(SessionStorage.locationVisitKey)\n\n    if (typeof window !== 'undefined') {\n      currentPage.setUrlHash(window.location.hash)\n    }\n\n    history\n      .decrypt()\n      .then(() => {\n        const rememberedState = history.getState<Page['rememberedState']>(history.rememberedState, {})\n        const scrollRegions = history.getState<Page['scrollRegions']>(history.scrollRegions, [])\n        currentPage.remember(rememberedState)\n        currentPage.scrollRegions(scrollRegions)\n\n        currentPage\n          .set(currentPage.get(), {\n            preserveScroll: locationVisit.preserveScroll,\n            preserveState: true,\n          })\n          .then(() => {\n            if (locationVisit.preserveScroll) {\n              Scroll.restore(currentPage.get())\n            }\n\n            fireNavigateEvent(currentPage.get())\n          })\n      })\n      .catch(() => {\n        eventHandler.onMissingHistoryItem()\n      })\n\n    return true\n  }\n\n  protected static handleDefault(): void {\n    if (typeof window !== 'undefined') {\n      currentPage.setUrlHash(window.location.hash)\n    }\n\n    currentPage.set(currentPage.get(), { preserveState: true }).then(() => {\n      fireNavigateEvent(currentPage.get())\n    })\n  }\n}\n", "import { PollOptions } from './types'\n\nexport class Poll {\n  protected id: number | null = null\n  protected throttle = false\n  protected keepAlive = false\n  protected cb: VoidFunction\n  protected interval: number\n  protected cbCount = 0\n\n  constructor(interval: number, cb: VoidFunction, options: PollOptions) {\n    this.keepAlive = options.keepAlive ?? false\n\n    this.cb = cb\n    this.interval = interval\n\n    if (options.autoStart ?? true) {\n      this.start()\n    }\n  }\n\n  public stop() {\n    // console.log('stopping...', this.id)\n    if (this.id) {\n      //   console.log('clearing interval...')\n      clearInterval(this.id)\n    }\n  }\n\n  public start() {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    this.stop()\n\n    this.id = window.setInterval(() => {\n      if (!this.throttle || this.cbCount % 10 === 0) {\n        this.cb()\n      }\n\n      if (this.throttle) {\n        this.cbCount++\n      }\n    }, this.interval)\n  }\n\n  public isInBackground(hidden: boolean) {\n    this.throttle = this.keepAlive ? false : hidden\n\n    if (this.throttle) {\n      this.cbCount = 0\n    }\n  }\n}\n", "import { Poll } from './poll'\nimport { PollOptions } from './types'\n\nclass Polls {\n  protected polls: Poll[] = []\n\n  constructor() {\n    this.setupVisibilityListener()\n  }\n\n  public add(\n    interval: number,\n    cb: VoidFunction,\n    options: PollOptions,\n  ): {\n    stop: VoidFunction\n    start: VoidFunction\n  } {\n    const poll = new Poll(interval, cb, options)\n\n    this.polls.push(poll)\n\n    return {\n      stop: () => poll.stop(),\n      start: () => poll.start(),\n    }\n  }\n\n  public clear() {\n    this.polls.forEach((poll) => poll.stop())\n\n    this.polls = []\n  }\n\n  protected setupVisibilityListener() {\n    if (typeof document === 'undefined') {\n      return\n    }\n\n    document.addEventListener(\n      'visibilitychange',\n      () => {\n        this.polls.forEach((poll) => poll.isInBackground(document.hidden))\n      },\n      false,\n    )\n  }\n}\n\nexport const polls = new Polls()\n", "export const objectsAreEqual = <T>(\n  obj1: T,\n  obj2: T,\n  excludeKeys: {\n    [K in keyof T]: K\n  }[keyof T][],\n): boolean => {\n  if (obj1 === obj2) {\n    return true\n  }\n\n  for (const key in obj1) {\n    if (excludeKeys.includes(key)) {\n      continue\n    }\n\n    if (obj1[key] === obj2[key]) {\n      continue\n    }\n\n    if (!compareValues(obj1[key], obj2[key])) {\n      return false\n    }\n  }\n\n  return true\n}\n\nconst compareValues = (value1: any, value2: any): boolean => {\n  switch (typeof value1) {\n    case 'object':\n      return objectsAreEqual(value1, value2, [])\n    case 'function':\n      return value1.toString() === value2.toString()\n    default:\n      return value1 === value2\n  }\n}\n", "const conversionMap = {\n  ms: 1,\n  s: 1000,\n  m: 1000 * 60,\n  h: 1000 * 60 * 60,\n  d: 1000 * 60 * 60 * 24,\n}\n\nexport const timeToMs = (time: string | number): number => {\n  if (typeof time === 'number') {\n    return time\n  }\n\n  for (const [unit, conversion] of Object.entries(conversionMap)) {\n    if (time.endsWith(unit)) {\n      return parseFloat(time) * conversion\n    }\n  }\n\n  return parseInt(time)\n}\n", "import { objectsAreEqual } from './objectUtils'\nimport { Response } from './response'\nimport { timeToMs } from './time'\nimport {\n  ActiveVisit,\n  CacheForOption,\n  InFlightPrefetch,\n  InternalActiveVisit,\n  PrefetchedResponse,\n  PrefetchOptions,\n  PrefetchRemovalTimer,\n} from './types'\n\nclass PrefetchedRequests {\n  protected cached: PrefetchedResponse[] = []\n  protected inFlightRequests: InFlightPrefetch[] = []\n  protected removalTimers: PrefetchRemovalTimer[] = []\n  protected currentUseId: string | null = null\n\n  public add(params: ActiveVisit, sendFunc: (params: InternalActiveVisit) => void, { cacheFor }: PrefetchOptions) {\n    const inFlight = this.findInFlight(params)\n\n    if (inFlight) {\n      return Promise.resolve()\n    }\n\n    const existing = this.findCached(params)\n\n    if (!params.fresh && existing && existing.staleTimestamp > Date.now()) {\n      return Promise.resolve()\n    }\n\n    const [stale, expires] = this.extractStaleValues(cacheFor)\n\n    const promise = new Promise<Response>((resolve, reject) => {\n      sendFunc({\n        ...params,\n        onCancel: () => {\n          this.remove(params)\n          params.onCancel()\n          reject()\n        },\n        onError: (error) => {\n          this.remove(params)\n          params.onError(error)\n          reject()\n        },\n        onPrefetching(visitParams) {\n          params.onPrefetching(visitParams)\n        },\n        onPrefetched(response, visit) {\n          params.onPrefetched(response, visit)\n        },\n        onPrefetchResponse(response) {\n          resolve(response)\n        },\n      })\n    }).then((response) => {\n      this.remove(params)\n\n      this.cached.push({\n        params: { ...params },\n        staleTimestamp: Date.now() + stale,\n        response: promise,\n        singleUse: cacheFor === 0,\n        timestamp: Date.now(),\n        inFlight: false,\n      })\n\n      this.scheduleForRemoval(params, expires)\n\n      this.inFlightRequests = this.inFlightRequests.filter((prefetching) => {\n        return !this.paramsAreEqual(prefetching.params, params)\n      })\n\n      response.handlePrefetch()\n\n      return response\n    })\n\n    this.inFlightRequests.push({\n      params: { ...params },\n      response: promise,\n      staleTimestamp: null,\n      inFlight: true,\n    })\n\n    return promise\n  }\n\n  public removeAll(): void {\n    this.cached = []\n    this.removalTimers.forEach((removalTimer) => {\n      clearTimeout(removalTimer.timer)\n    })\n    this.removalTimers = []\n  }\n\n  public remove(params: ActiveVisit): void {\n    this.cached = this.cached.filter((prefetched) => {\n      return !this.paramsAreEqual(prefetched.params, params)\n    })\n\n    this.clearTimer(params)\n  }\n\n  protected extractStaleValues(cacheFor: PrefetchOptions['cacheFor']): [number, number] {\n    const [stale, expires] = this.cacheForToStaleAndExpires(cacheFor)\n\n    return [timeToMs(stale), timeToMs(expires)]\n  }\n\n  protected cacheForToStaleAndExpires(cacheFor: PrefetchOptions['cacheFor']): [CacheForOption, CacheForOption] {\n    if (!Array.isArray(cacheFor)) {\n      return [cacheFor, cacheFor]\n    }\n\n    switch (cacheFor.length) {\n      case 0:\n        return [0, 0]\n      case 1:\n        return [cacheFor[0], cacheFor[0]]\n      default:\n        return [cacheFor[0], cacheFor[1]]\n    }\n  }\n\n  protected clearTimer(params: ActiveVisit) {\n    const timer = this.removalTimers.find((removalTimer) => {\n      return this.paramsAreEqual(removalTimer.params, params)\n    })\n\n    if (timer) {\n      clearTimeout(timer.timer)\n      this.removalTimers = this.removalTimers.filter((removalTimer) => removalTimer !== timer)\n    }\n  }\n\n  protected scheduleForRemoval(params: ActiveVisit, expiresIn: number) {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    this.clearTimer(params)\n\n    if (expiresIn > 0) {\n      const timer = window.setTimeout(() => this.remove(params), expiresIn)\n\n      this.removalTimers.push({\n        params,\n        timer,\n      })\n    }\n  }\n\n  public get(params: ActiveVisit): InFlightPrefetch | PrefetchedResponse | null {\n    return this.findCached(params) || this.findInFlight(params)\n  }\n\n  public use(prefetched: PrefetchedResponse | InFlightPrefetch, params: ActiveVisit) {\n    const id = `${params.url.pathname}-${Date.now()}-${Math.random().toString(36).substring(7)}`\n\n    this.currentUseId = id\n\n    return prefetched.response.then((response) => {\n      if (this.currentUseId !== id) {\n        // They've since gone on to `use` a different request,\n        // so we should ignore this one\n        return\n      }\n\n      response.mergeParams({ ...params, onPrefetched: () => {} })\n\n      // If this was a one-time cache, remove it\n      // (generally a prefetch=\"click\" request with no specified cache value)\n      this.removeSingleUseItems(params)\n\n      return response.handle()\n    })\n  }\n\n  protected removeSingleUseItems(params: ActiveVisit) {\n    this.cached = this.cached.filter((prefetched) => {\n      if (!this.paramsAreEqual(prefetched.params, params)) {\n        return true\n      }\n\n      return !prefetched.singleUse\n    })\n  }\n\n  public findCached(params: ActiveVisit): PrefetchedResponse | null {\n    return (\n      this.cached.find((prefetched) => {\n        return this.paramsAreEqual(prefetched.params, params)\n      }) || null\n    )\n  }\n\n  public findInFlight(params: ActiveVisit): InFlightPrefetch | null {\n    return (\n      this.inFlightRequests.find((prefetched) => {\n        return this.paramsAreEqual(prefetched.params, params)\n      }) || null\n    )\n  }\n\n  protected paramsAreEqual(params1: ActiveVisit, params2: ActiveVisit): boolean {\n    return objectsAreEqual<ActiveVisit>(params1, params2, [\n      'showProgress',\n      'replace',\n      'prefetch',\n      'onBefore',\n      'onStart',\n      'onProgress',\n      'onFinish',\n      'onCancel',\n      'onSuccess',\n      'onError',\n      'onPrefetched',\n      'onCancelToken',\n      'onPrefetching',\n      'async',\n    ])\n  }\n}\n\nexport const prefetchedRequests = new PrefetchedRequests()\n", "import { default as axios, AxiosProgressEvent, AxiosRequestConfig } from 'axios'\nimport { fireExceptionEvent, fireFinishEvent, firePrefetchingEvent, fireProgressEvent, fireStartEvent } from './events'\nimport { page as currentPage } from './page'\nimport { RequestParams } from './requestParams'\nimport { Response } from './response'\nimport { ActiveVisit, Page } from './types'\nimport { urlWithoutHash } from './url'\n\nexport class Request {\n  protected response!: Response\n  protected cancelToken!: AbortController\n  protected requestParams: RequestParams\n  protected requestHasFinished = false\n\n  constructor(\n    params: ActiveVisit,\n    protected page: Page,\n  ) {\n    this.requestParams = RequestParams.create(params)\n    this.cancelToken = new AbortController()\n  }\n\n  public static create(params: ActiveVisit, page: Page): Request {\n    return new Request(params, page)\n  }\n\n  public async send() {\n    this.requestParams.onCancelToken(() => this.cancel({ cancelled: true }))\n\n    fireStartEvent(this.requestParams.all())\n    this.requestParams.onStart()\n\n    if (this.requestParams.all().prefetch) {\n      this.requestParams.onPrefetching()\n      firePrefetchingEvent(this.requestParams.all())\n    }\n\n    // We capture this up here because the response\n    // will clear the prefetch flag so it can use it\n    // as a regular response once the prefetch is done\n    const originallyPrefetch = this.requestParams.all().prefetch\n\n    return axios({\n      method: this.requestParams.all().method,\n      url: urlWithoutHash(this.requestParams.all().url).href,\n      data: this.requestParams.data(),\n      params: this.requestParams.queryParams(),\n      signal: this.cancelToken.signal,\n      headers: this.getHeaders(),\n      onUploadProgress: this.onProgress.bind(this),\n      // Why text? This allows us to delay JSON.parse until we're ready to use the response,\n      // helps with performance particularly on large responses + history encryption\n      responseType: 'text',\n    })\n      .then((response) => {\n        this.response = Response.create(this.requestParams, response, this.page)\n\n        return this.response.handle()\n      })\n      .catch((error) => {\n        if (error?.response) {\n          this.response = Response.create(this.requestParams, error.response, this.page)\n\n          return this.response.handle()\n        }\n\n        return Promise.reject(error)\n      })\n      .catch((error) => {\n        if (axios.isCancel(error)) {\n          return\n        }\n\n        if (fireExceptionEvent(error)) {\n          return Promise.reject(error)\n        }\n      })\n      .finally(() => {\n        this.finish()\n\n        if (originallyPrefetch && this.response) {\n          this.requestParams.onPrefetchResponse(this.response)\n        }\n      })\n  }\n\n  protected finish(): void {\n    if (this.requestParams.wasCancelledAtAll()) {\n      return\n    }\n\n    this.requestParams.markAsFinished()\n    this.fireFinishEvents()\n  }\n\n  protected fireFinishEvents(): void {\n    if (this.requestHasFinished) {\n      // This could be called from multiple places, don't let it re-fire\n      return\n    }\n\n    this.requestHasFinished = true\n\n    fireFinishEvent(this.requestParams.all())\n    this.requestParams.onFinish()\n  }\n\n  public cancel({ cancelled = false, interrupted = false }: { cancelled?: boolean; interrupted?: boolean }): void {\n    if (this.requestHasFinished) {\n      // If the request has already finished, there's no need to cancel it\n      return\n    }\n\n    this.cancelToken.abort()\n\n    this.requestParams.markAsCancelled({ cancelled, interrupted })\n\n    this.fireFinishEvents()\n  }\n\n  protected onProgress(progress: AxiosProgressEvent): void {\n    if (this.requestParams.data() instanceof FormData) {\n      progress.percentage = progress.progress ? Math.round(progress.progress * 100) : 0\n      fireProgressEvent(progress)\n      this.requestParams.all().onProgress(progress)\n    }\n  }\n\n  protected getHeaders(): AxiosRequestConfig['headers'] {\n    const headers: AxiosRequestConfig['headers'] = {\n      ...this.requestParams.headers(),\n      Accept: 'text/html, application/xhtml+xml',\n      'X-Requested-With': 'XMLHttpRequest',\n      'X-Inertia': true,\n    }\n\n    if (currentPage.get().version) {\n      headers['X-Inertia-Version'] = currentPage.get().version\n    }\n\n    return headers\n  }\n}\n", "import { AxiosRequestConfig } from 'axios'\nimport { page as currentPage } from './page'\nimport { Response } from './response'\nimport { ActiveVisit, InternalActiveVisit, Page, PreserveStateOption, VisitCallbacks } from './types'\n\nexport class RequestParams {\n  protected callbacks: {\n    name: keyof VisitCallbacks\n    args: any[]\n  }[] = []\n\n  protected params: InternalActiveVisit\n\n  constructor(params: InternalActiveVisit) {\n    if (!params.prefetch) {\n      this.params = params\n    } else {\n      const wrappedCallbacks: Record<keyof VisitCallbacks, () => any> = {\n        onBefore: this.wrapCallback(params, 'onBefore'),\n        onStart: this.wrapCallback(params, 'onStart'),\n        onProgress: this.wrapCallback(params, 'onProgress'),\n        onFinish: this.wrapCallback(params, 'onFinish'),\n        onCancel: this.wrapCallback(params, 'onCancel'),\n        onSuccess: this.wrapCallback(params, 'onSuccess'),\n        onError: this.wrapCallback(params, 'onError'),\n        onCancelToken: this.wrapCallback(params, 'onCancelToken'),\n        onPrefetched: this.wrapCallback(params, 'onPrefetched'),\n        onPrefetching: this.wrapCallback(params, 'onPrefetching'),\n      }\n\n      this.params = {\n        ...params,\n        ...wrappedCallbacks,\n        onPrefetchResponse: params.onPrefetchResponse || (() => {}),\n      }\n    }\n    //\n  }\n\n  public static create(params: ActiveVisit): RequestParams {\n    return new RequestParams(params)\n  }\n\n  public data() {\n    return this.params.method === 'get' ? {} : this.params.data\n  }\n\n  public queryParams() {\n    return this.params.method === 'get' ? this.params.data : {}\n  }\n\n  public isPartial() {\n    return this.params.only.length > 0 || this.params.except.length > 0 || this.params.reset.length > 0\n  }\n\n  public onCancelToken(cb: VoidFunction) {\n    this.params.onCancelToken({\n      cancel: cb,\n    })\n  }\n\n  public markAsFinished() {\n    this.params.completed = true\n    this.params.cancelled = false\n    this.params.interrupted = false\n  }\n\n  public markAsCancelled({ cancelled = true, interrupted = false }) {\n    this.params.onCancel()\n\n    this.params.completed = false\n    this.params.cancelled = cancelled\n    this.params.interrupted = interrupted\n  }\n\n  public wasCancelledAtAll() {\n    return this.params.cancelled || this.params.interrupted\n  }\n\n  public onFinish() {\n    this.params.onFinish(this.params)\n  }\n\n  public onStart() {\n    this.params.onStart(this.params)\n  }\n\n  public onPrefetching() {\n    this.params.onPrefetching(this.params)\n  }\n\n  public onPrefetchResponse(response: Response) {\n    if (this.params.onPrefetchResponse) {\n      this.params.onPrefetchResponse(response)\n    }\n  }\n\n  public all() {\n    return this.params\n  }\n\n  public headers(): AxiosRequestConfig['headers'] {\n    const headers: AxiosRequestConfig['headers'] = {\n      ...this.params.headers,\n    }\n\n    if (this.isPartial()) {\n      headers['X-Inertia-Partial-Component'] = currentPage.get().component\n    }\n\n    const only = this.params.only.concat(this.params.reset)\n\n    if (only.length > 0) {\n      headers['X-Inertia-Partial-Data'] = only.join(',')\n    }\n\n    if (this.params.except.length > 0) {\n      headers['X-Inertia-Partial-Except'] = this.params.except.join(',')\n    }\n\n    if (this.params.reset.length > 0) {\n      headers['X-Inertia-Reset'] = this.params.reset.join(',')\n    }\n\n    if (this.params.errorBag && this.params.errorBag.length > 0) {\n      headers['X-Inertia-Error-Bag'] = this.params.errorBag\n    }\n\n    return headers\n  }\n\n  public setPreserveOptions(page: Page) {\n    this.params.preserveScroll = this.resolvePreserveOption(this.params.preserveScroll, page)\n    this.params.preserveState = this.resolvePreserveOption(this.params.preserveState, page)\n  }\n\n  public runCallbacks() {\n    this.callbacks.forEach(({ name, args }) => {\n      // @ts-ignore\n      this.params[name](...args)\n    })\n  }\n\n  public merge(toMerge: Partial<ActiveVisit>) {\n    this.params = {\n      ...this.params,\n      ...toMerge,\n    }\n  }\n\n  protected wrapCallback(params: ActiveVisit, name: keyof VisitCallbacks) {\n    // @ts-ignore\n    return (...args) => {\n      this.recordCallback(name, args)\n      // @ts-ignore\n      params[name](...args)\n    }\n  }\n\n  protected recordCallback(name: keyof VisitCallbacks, args: any[]) {\n    this.callbacks.push({ name, args })\n  }\n\n  protected resolvePreserveOption(value: PreserveStateOption, page: Page): boolean {\n    if (typeof value === 'function') {\n      return value(page)\n    }\n\n    if (value === 'errors') {\n      return Object.keys(page.props.errors || {}).length > 0\n    }\n\n    return value\n  }\n}\n", "export default {\n  modal: null,\n  listener: null,\n\n  show(html: Record<string, unknown> | string): void {\n    if (typeof html === 'object') {\n      html = `All Inertia requests must receive a valid Inertia response, however a plain JSON response was received.<hr>${JSON.stringify(\n        html,\n      )}`\n    }\n\n    const page = document.createElement('html')\n    page.innerHTML = html\n    page.querySelectorAll('a').forEach((a) => a.setAttribute('target', '_top'))\n\n    this.modal = document.createElement('div')\n    this.modal.style.position = 'fixed'\n    this.modal.style.width = '100vw'\n    this.modal.style.height = '100vh'\n    this.modal.style.padding = '50px'\n    this.modal.style.boxSizing = 'border-box'\n    this.modal.style.backgroundColor = 'rgba(0, 0, 0, .6)'\n    this.modal.style.zIndex = 200000\n    this.modal.addEventListener('click', () => this.hide())\n\n    const iframe = document.createElement('iframe')\n    iframe.style.backgroundColor = 'white'\n    iframe.style.borderRadius = '5px'\n    iframe.style.width = '100%'\n    iframe.style.height = '100%'\n    this.modal.appendChild(iframe)\n\n    document.body.prepend(this.modal)\n    document.body.style.overflow = 'hidden'\n    if (!iframe.contentWindow) {\n      throw new Error('iframe not yet ready.')\n    }\n    iframe.contentWindow.document.open()\n    iframe.contentWindow.document.write(page.outerHTML)\n    iframe.contentWindow.document.close()\n\n    this.listener = this.hideOnEscape.bind(this)\n    document.addEventListener('keydown', this.listener)\n  },\n\n  hide(): void {\n    this.modal.outerHTML = ''\n    this.modal = null\n    document.body.style.overflow = 'visible'\n    document.removeEventListener('keydown', this.listener)\n  },\n\n  hideOnEscape(event: KeyboardEvent): void {\n    if (event.keyCode === 27) {\n      this.hide()\n    }\n  },\n}\n", "import { AxiosResponse } from 'axios'\nimport { fireErrorEvent, fireInvalidEvent, firePrefetchedEvent, fireSuccessEvent } from './events'\nimport { history } from './history'\nimport modal from './modal'\nimport { page as currentPage } from './page'\nimport { RequestParams } from './requestParams'\nimport { SessionStorage } from './sessionStorage'\nimport { ActiveVisit, ErrorBag, Errors, Page } from './types'\nimport { hrefToUrl, isSameUrlWithoutHash, setHashIfSameUrl } from './url'\n\nclass ResponseQueue {\n  protected queue: Response[] = []\n  protected processing = false\n\n  public add(response: Response) {\n    this.queue.push(response)\n  }\n\n  public async process(): Promise<void> {\n    if (this.processing) {\n      return Promise.resolve()\n    }\n\n    this.processing = true\n    await this.processQueue()\n    this.processing = false\n\n    return Promise.resolve()\n  }\n\n  protected async processQueue(): Promise<void> {\n    const nextResponse = this.queue.shift()\n\n    if (nextResponse) {\n      await nextResponse.process()\n      return this.processQueue()\n    }\n\n    return Promise.resolve()\n  }\n}\n\nconst queue = new ResponseQueue()\n\nexport class Response {\n  constructor(\n    protected requestParams: RequestParams,\n    protected response: AxiosResponse,\n    protected originatingPage: Page,\n  ) {}\n\n  public static create(params: RequestParams, response: AxiosResponse, originatingPage: Page): Response {\n    return new Response(params, response, originatingPage)\n  }\n\n  public async handlePrefetch() {\n    if (isSameUrlWithoutHash(this.requestParams.all().url, window.location)) {\n      this.handle()\n    }\n  }\n\n  public async handle() {\n    queue.add(this)\n    return queue.process()\n  }\n\n  public async process() {\n    if (this.requestParams.all().prefetch) {\n      this.requestParams.all().prefetch = false\n\n      this.requestParams.all().onPrefetched(this.response, this.requestParams.all())\n      firePrefetchedEvent(this.response, this.requestParams.all())\n\n      return Promise.resolve()\n    }\n\n    this.requestParams.runCallbacks()\n\n    if (!this.isInertiaResponse()) {\n      return this.handleNonInertiaResponse()\n    }\n\n    await history.processQueue()\n\n    history.preserveUrl = this.requestParams.all().preserveUrl\n\n    await this.setPage()\n\n    const errors = currentPage.get().props.errors || {}\n\n    if (Object.keys(errors).length > 0) {\n      const scopedErrors = this.getScopedErrors(errors)\n\n      fireErrorEvent(scopedErrors)\n\n      return this.requestParams.all().onError(scopedErrors)\n    }\n\n    fireSuccessEvent(currentPage.get())\n\n    await this.requestParams.all().onSuccess(currentPage.get())\n\n    history.preserveUrl = false\n  }\n\n  public mergeParams(params: ActiveVisit) {\n    this.requestParams.merge(params)\n  }\n\n  protected async handleNonInertiaResponse() {\n    if (this.isLocationVisit()) {\n      const locationUrl = hrefToUrl(this.getHeader('x-inertia-location'))\n\n      setHashIfSameUrl(this.requestParams.all().url, locationUrl)\n\n      return this.locationVisit(locationUrl)\n    }\n\n    const response = {\n      ...this.response,\n      data: this.getDataFromResponse(this.response.data),\n    }\n\n    if (fireInvalidEvent(response)) {\n      return modal.show(response.data)\n    }\n  }\n\n  protected isInertiaResponse(): boolean {\n    return this.hasHeader('x-inertia')\n  }\n\n  protected hasStatus(status: number): boolean {\n    return this.response.status === status\n  }\n\n  protected getHeader(header: string): string {\n    return this.response.headers[header]\n  }\n\n  protected hasHeader(header: string): boolean {\n    return this.getHeader(header) !== undefined\n  }\n\n  protected isLocationVisit(): boolean {\n    return this.hasStatus(409) && this.hasHeader('x-inertia-location')\n  }\n\n  /**\n   * @link https://inertiajs.com/redirects#external-redirects\n   */\n  protected locationVisit(url: URL): boolean | void {\n    try {\n      SessionStorage.set(SessionStorage.locationVisitKey, {\n        preserveScroll: this.requestParams.all().preserveScroll === true,\n      })\n\n      if (typeof window === 'undefined') {\n        return\n      }\n\n      if (isSameUrlWithoutHash(window.location, url)) {\n        window.location.reload()\n      } else {\n        window.location.href = url.href\n      }\n    } catch (error) {\n      return false\n    }\n  }\n\n  protected async setPage(): Promise<void> {\n    const pageResponse = this.getDataFromResponse(this.response.data)\n\n    if (!this.shouldSetPage(pageResponse)) {\n      return Promise.resolve()\n    }\n\n    this.mergeProps(pageResponse)\n    await this.setRememberedState(pageResponse)\n\n    this.requestParams.setPreserveOptions(pageResponse)\n\n    pageResponse.url = history.preserveUrl ? currentPage.get().url : this.pageUrl(pageResponse)\n\n    return currentPage.set(pageResponse, {\n      replace: this.requestParams.all().replace,\n      preserveScroll: this.requestParams.all().preserveScroll,\n      preserveState: this.requestParams.all().preserveState,\n    })\n  }\n\n  protected getDataFromResponse(response: any): any {\n    if (typeof response !== 'string') {\n      return response\n    }\n\n    try {\n      return JSON.parse(response)\n    } catch (error) {\n      return response\n    }\n  }\n\n  protected shouldSetPage(pageResponse: Page): boolean {\n    if (!this.requestParams.all().async) {\n      // If the request is sync, we should always set the page\n      return true\n    }\n\n    if (this.originatingPage.component !== pageResponse.component) {\n      // We originated from a component but the response re-directed us,\n      // we should respect the redirection and set the page\n      return true\n    }\n\n    // At this point, if the originating request component is different than the current component,\n    // the user has since navigated and we should discard the response\n    if (this.originatingPage.component !== currentPage.get().component) {\n      return false\n    }\n\n    const originatingUrl = hrefToUrl(this.originatingPage.url)\n    const currentPageUrl = hrefToUrl(currentPage.get().url)\n\n    // We have the same component, let's double-check the URL\n    // If we're no longer on the same path name (e.g. /users/1 -> /users/2), we should not set the page\n    return originatingUrl.origin === currentPageUrl.origin && originatingUrl.pathname === currentPageUrl.pathname\n  }\n\n  protected pageUrl(pageResponse: Page) {\n    const responseUrl = hrefToUrl(pageResponse.url)\n\n    setHashIfSameUrl(this.requestParams.all().url, responseUrl)\n\n    return responseUrl.href.split(responseUrl.host).pop()\n  }\n\n  protected mergeProps(pageResponse: Page): void {\n    if (this.requestParams.isPartial() && pageResponse.component === currentPage.get().component) {\n      const propsToMerge = pageResponse.mergeProps || []\n\n      propsToMerge.forEach((prop) => {\n        const incomingProp = pageResponse.props[prop]\n\n        if (Array.isArray(incomingProp)) {\n          pageResponse.props[prop] = [...((currentPage.get().props[prop] || []) as any[]), ...incomingProp]\n        } else if (typeof incomingProp === 'object') {\n          pageResponse.props[prop] = {\n            ...((currentPage.get().props[prop] || []) as Record<string, any>),\n            ...incomingProp,\n          }\n        }\n      })\n\n      pageResponse.props = { ...currentPage.get().props, ...pageResponse.props }\n    }\n  }\n\n  protected async setRememberedState(pageResponse: Page): Promise<void> {\n    const rememberedState = await history.getState<Page['rememberedState']>(history.rememberedState, {})\n\n    if (\n      this.requestParams.all().preserveState &&\n      rememberedState &&\n      pageResponse.component === currentPage.get().component\n    ) {\n      pageResponse.rememberedState = rememberedState\n    }\n  }\n\n  protected getScopedErrors(errors: Errors & ErrorBag): Errors {\n    if (!this.requestParams.all().errorBag) {\n      return errors\n    }\n\n    return errors[this.requestParams.all().errorBag || ''] || {}\n  }\n}\n", "import { Request } from './request'\n\nexport class RequestStream {\n  protected requests: Request[] = []\n\n  protected maxConcurrent: number\n\n  protected interruptible: boolean\n\n  constructor({ maxConcurrent, interruptible }: { maxConcurrent: number; interruptible: boolean }) {\n    this.maxConcurrent = maxConcurrent\n    this.interruptible = interruptible\n  }\n\n  public send(request: Request) {\n    this.requests.push(request)\n\n    request.send().then(() => {\n      this.requests = this.requests.filter((r) => r !== request)\n    })\n  }\n\n  public interruptInFlight(): void {\n    this.cancel({ interrupted: true }, false)\n  }\n\n  public cancelInFlight(): void {\n    this.cancel({ cancelled: true }, true)\n  }\n\n  protected cancel({ cancelled = false, interrupted = false } = {}, force: boolean): void {\n    if (!this.shouldCancel(force)) {\n      return\n    }\n\n    const request = this.requests.shift()!\n\n    request?.cancel({ interrupted, cancelled })\n  }\n\n  protected shouldCancel(force: boolean): boolean {\n    if (force) {\n      return true\n    }\n\n    return this.interruptible && this.requests.length >= this.maxConcurrent\n  }\n}\n", "import { hideProgress, revealProgress } from '.'\nimport { eventHandler } from './eventHandler'\nimport { fireBeforeEvent } from './events'\nimport { history } from './history'\nimport { InitialVisit } from './initialVisit'\nimport { page as currentPage } from './page'\nimport { polls } from './polls'\nimport { prefetchedRequests } from './prefetched'\nimport { Request } from './request'\nimport { RequestStream } from './requestStream'\nimport { Scroll } from './scroll'\nimport {\n  ActiveVisit,\n  ClientSideVisitOptions,\n  GlobalEvent,\n  GlobalEventNames,\n  GlobalEventResult,\n  InFlightPrefetch,\n  Page,\n  PendingVisit,\n  PendingVisitOptions,\n  PollOptions,\n  PrefetchedResponse,\n  PrefetchOptions,\n  ReloadOptions,\n  RequestPayload,\n  RouterInitParams,\n  Visit,\n  VisitCallbacks,\n  VisitHelperOptions,\n  VisitOptions,\n} from './types'\nimport { transformUrlAndData } from './url'\n\nexport class Router {\n  protected syncRequestStream = new RequestStream({\n    maxConcurrent: 1,\n    interruptible: true,\n  })\n\n  protected asyncRequestStream = new RequestStream({\n    maxConcurrent: Infinity,\n    interruptible: false,\n  })\n\n  public init({ initialPage, resolveComponent, swapComponent }: RouterInitParams): void {\n    currentPage.init({\n      initialPage,\n      resolveComponent,\n      swapComponent,\n    })\n\n    InitialVisit.handle()\n\n    eventHandler.init()\n\n    eventHandler.on('missingHistoryItem', () => {\n      if (typeof window !== 'undefined') {\n        this.visit(window.location.href, { preserveState: true, preserveScroll: true, replace: true })\n      }\n    })\n\n    eventHandler.on('loadDeferredProps', () => {\n      this.loadDeferredProps()\n    })\n  }\n\n  public get(url: URL | string, data: RequestPayload = {}, options: VisitHelperOptions = {}): void {\n    return this.visit(url, { ...options, method: 'get', data })\n  }\n\n  public post(url: URL | string, data: RequestPayload = {}, options: VisitHelperOptions = {}): void {\n    return this.visit(url, { preserveState: true, ...options, method: 'post', data })\n  }\n\n  public put(url: URL | string, data: RequestPayload = {}, options: VisitHelperOptions = {}): void {\n    return this.visit(url, { preserveState: true, ...options, method: 'put', data })\n  }\n\n  public patch(url: URL | string, data: RequestPayload = {}, options: VisitHelperOptions = {}): void {\n    return this.visit(url, { preserveState: true, ...options, method: 'patch', data })\n  }\n\n  public delete(url: URL | string, options: Omit<VisitOptions, 'method'> = {}): void {\n    return this.visit(url, { preserveState: true, ...options, method: 'delete' })\n  }\n\n  public reload(options: ReloadOptions = {}): void {\n    if (typeof window === 'undefined') {\n      return\n    }\n\n    return this.visit(window.location.href, {\n      ...options,\n      preserveScroll: true,\n      preserveState: true,\n      async: true,\n      headers: {\n        ...(options.headers || {}),\n        'Cache-Control': 'no-cache',\n      },\n    })\n  }\n\n  public remember(data: unknown, key = 'default'): void {\n    history.remember(data, key)\n  }\n\n  public restore(key = 'default'): unknown {\n    return history.restore(key)\n  }\n\n  public on<TEventName extends GlobalEventNames>(\n    type: TEventName,\n    callback: (event: GlobalEvent<TEventName>) => GlobalEventResult<TEventName>,\n  ): VoidFunction {\n    return eventHandler.onGlobalEvent(type, callback)\n  }\n\n  public cancel(): void {\n    this.syncRequestStream.cancelInFlight()\n  }\n\n  public cancelAll(): void {\n    this.asyncRequestStream.cancelInFlight()\n    this.syncRequestStream.cancelInFlight()\n  }\n\n  public poll(interval: number, requestOptions: ReloadOptions = {}, options: PollOptions = {}) {\n    return polls.add(interval, () => this.reload(requestOptions), {\n      autoStart: options.autoStart ?? true,\n      keepAlive: options.keepAlive ?? false,\n    })\n  }\n\n  public visit(href: string | URL, options: VisitOptions = {}): void {\n    const visit: PendingVisit = this.getPendingVisit(href, {\n      ...options,\n      showProgress: options.showProgress ?? !options.async,\n    })\n\n    const events = this.getVisitEvents(options)\n\n    // If either of these return false, we don't want to continue\n    if (events.onBefore(visit) === false || !fireBeforeEvent(visit)) {\n      return\n    }\n\n    const requestStream = visit.async ? this.asyncRequestStream : this.syncRequestStream\n\n    requestStream.interruptInFlight()\n\n    if (!currentPage.isCleared() && !visit.preserveUrl) {\n      // Save scroll regions for the current page\n      Scroll.save(currentPage.get())\n    }\n\n    const requestParams: PendingVisit & VisitCallbacks = {\n      ...visit,\n      ...events,\n    }\n\n    const prefetched = prefetchedRequests.get(requestParams)\n\n    if (prefetched) {\n      revealProgress(prefetched.inFlight)\n      prefetchedRequests.use(prefetched, requestParams)\n    } else {\n      revealProgress(true)\n      requestStream.send(Request.create(requestParams, currentPage.get()))\n    }\n  }\n\n  public getCached(href: string | URL, options: VisitOptions = {}): InFlightPrefetch | PrefetchedResponse | null {\n    return prefetchedRequests.findCached(this.getPrefetchParams(href, options))\n  }\n\n  public flush(href: string | URL, options: VisitOptions = {}): void {\n    prefetchedRequests.remove(this.getPrefetchParams(href, options))\n  }\n\n  public flushAll(): void {\n    prefetchedRequests.removeAll()\n  }\n\n  public getPrefetching(href: string | URL, options: VisitOptions = {}): InFlightPrefetch | PrefetchedResponse | null {\n    return prefetchedRequests.findInFlight(this.getPrefetchParams(href, options))\n  }\n\n  public prefetch(href: string | URL, options: VisitOptions = {}, { cacheFor }: PrefetchOptions) {\n    if (options.method !== 'get') {\n      throw new Error('Prefetch requests must use the GET method')\n    }\n\n    const visit: PendingVisit = this.getPendingVisit(href, {\n      ...options,\n      async: true,\n      showProgress: false,\n      prefetch: true,\n    })\n\n    const visitUrl = visit.url.origin + visit.url.pathname + visit.url.search\n    const currentUrl = window.location.origin + window.location.pathname + window.location.search\n\n    if (visitUrl === currentUrl) {\n      // Don't prefetch the current page, you're already on it\n      return\n    }\n\n    const events = this.getVisitEvents(options)\n\n    // If either of these return false, we don't want to continue\n    if (events.onBefore(visit) === false || !fireBeforeEvent(visit)) {\n      return\n    }\n\n    hideProgress()\n\n    this.asyncRequestStream.interruptInFlight()\n\n    const requestParams: PendingVisit & VisitCallbacks = {\n      ...visit,\n      ...events,\n    }\n\n    const ensureCurrentPageIsSet = (): Promise<void> => {\n      return new Promise((resolve) => {\n        const checkIfPageIsDefined = () => {\n          if (currentPage.get()) {\n            resolve()\n          } else {\n            setTimeout(checkIfPageIsDefined, 50)\n          }\n        }\n\n        checkIfPageIsDefined()\n      })\n    }\n\n    ensureCurrentPageIsSet().then(() => {\n      prefetchedRequests.add(\n        requestParams,\n        (params) => {\n          this.asyncRequestStream.send(Request.create(params, currentPage.get()))\n        },\n        { cacheFor },\n      )\n    })\n  }\n\n  public clearHistory(): void {\n    history.clear()\n  }\n\n  public decryptHistory(): Promise<Page> {\n    return history.decrypt()\n  }\n\n  public replace(params: ClientSideVisitOptions): void {\n    this.clientVisit(params, { replace: true })\n  }\n\n  public push(params: ClientSideVisitOptions): void {\n    this.clientVisit(params)\n  }\n\n  protected clientVisit(params: ClientSideVisitOptions, { replace = false }: { replace?: boolean } = {}): void {\n    const current = currentPage.get()\n\n    const props = typeof params.props === 'function' ? params.props(current.props) : params.props ?? current.props\n\n    currentPage.set(\n      {\n        ...current,\n        ...params,\n        props,\n      },\n      {\n        replace,\n        preserveScroll: params.preserveScroll,\n        preserveState: params.preserveState,\n      },\n    )\n  }\n\n  protected getPrefetchParams(href: string | URL, options: VisitOptions): ActiveVisit {\n    return {\n      ...this.getPendingVisit(href, {\n        ...options,\n        async: true,\n        showProgress: false,\n        prefetch: true,\n      }),\n      ...this.getVisitEvents(options),\n    }\n  }\n\n  protected getPendingVisit(\n    href: string | URL,\n    options: VisitOptions,\n    pendingVisitOptions: Partial<PendingVisitOptions> = {},\n  ): PendingVisit {\n    const mergedOptions: Visit = {\n      method: 'get',\n      data: {},\n      replace: false,\n      preserveScroll: false,\n      preserveState: false,\n      only: [],\n      except: [],\n      headers: {},\n      errorBag: '',\n      forceFormData: false,\n      queryStringArrayFormat: 'brackets',\n      async: false,\n      showProgress: true,\n      fresh: false,\n      reset: [],\n      preserveUrl: false,\n      prefetch: false,\n      ...options,\n    }\n\n    const [url, _data] = transformUrlAndData(\n      href,\n      mergedOptions.data,\n      mergedOptions.method,\n      mergedOptions.forceFormData,\n      mergedOptions.queryStringArrayFormat,\n    )\n\n    return {\n      cancelled: false,\n      completed: false,\n      interrupted: false,\n      ...mergedOptions,\n      ...pendingVisitOptions,\n      url,\n      data: _data,\n    }\n  }\n\n  protected getVisitEvents(options: VisitOptions): VisitCallbacks {\n    return {\n      onCancelToken: options.onCancelToken || (() => {}),\n      onBefore: options.onBefore || (() => {}),\n      onStart: options.onStart || (() => {}),\n      onProgress: options.onProgress || (() => {}),\n      onFinish: options.onFinish || (() => {}),\n      onCancel: options.onCancel || (() => {}),\n      onSuccess: options.onSuccess || (() => {}),\n      onError: options.onError || (() => {}),\n      onPrefetched: options.onPrefetched || (() => {}),\n      onPrefetching: options.onPrefetching || (() => {}),\n    }\n  }\n\n  protected loadDeferredProps(): void {\n    const deferred = currentPage.get()?.deferredProps\n\n    if (deferred) {\n      Object.entries(deferred).forEach(([_, group]) => {\n        this.reload({ only: group })\n      })\n    }\n  }\n}\n", "import debounce from './debounce'\n\nconst Renderer = {\n  buildDOMElement(tag: string): ChildNode {\n    const template = document.createElement('template')\n    template.innerHTML = tag\n    const node = template.content.firstChild as Element\n\n    if (!tag.startsWith('<script ')) {\n      return node\n    }\n\n    const script = document.createElement('script')\n    script.innerHTML = node.innerHTML\n    node.getAttributeNames().forEach((name) => {\n      script.setAttribute(name, node.getAttribute(name) || '')\n    })\n\n    return script\n  },\n\n  isInertiaManagedElement(element: Element): boolean {\n    return element.nodeType === Node.ELEMENT_NODE && element.getAttribute('inertia') !== null\n  },\n\n  findMatchingElementIndex(element: Element, elements: Array<Element>): number {\n    const key = element.getAttribute('inertia')\n    if (key !== null) {\n      return elements.findIndex((element) => element.getAttribute('inertia') === key)\n    }\n\n    return -1\n  },\n\n  update: debounce(function (elements: Array<string>) {\n    const sourceElements = elements.map((element) => this.buildDOMElement(element))\n    const targetElements = Array.from(document.head.childNodes).filter((element) =>\n      this.isInertiaManagedElement(element as Element),\n    )\n\n    targetElements.forEach((targetElement) => {\n      const index = this.findMatchingElementIndex(targetElement as Element, sourceElements)\n      if (index === -1) {\n        targetElement?.parentNode?.removeChild(targetElement)\n        return\n      }\n\n      const sourceElement = sourceElements.splice(index, 1)[0]\n      if (sourceElement && !targetElement.isEqualNode(sourceElement)) {\n        targetElement?.parentNode?.replaceChild(sourceElement, targetElement)\n      }\n    })\n\n    sourceElements.forEach((element) => document.head.appendChild(element))\n  }, 1),\n}\n\nexport default function createHeadManager(\n  isServer: boolean,\n  titleCallback: (title: string) => string,\n  onUpdate: (elements: string[]) => void,\n): {\n  forceUpdate: () => void\n  createProvider: () => {\n    update: (elements: string[]) => void\n    disconnect: () => void\n  }\n} {\n  const states: Record<string, Array<string>> = {}\n  let lastProviderId = 0\n\n  function connect(): string {\n    const id = (lastProviderId += 1)\n    states[id] = []\n    return id.toString()\n  }\n\n  function disconnect(id: string): void {\n    if (id === null || Object.keys(states).indexOf(id) === -1) {\n      return\n    }\n\n    delete states[id]\n    commit()\n  }\n\n  function update(id: string, elements: Array<string> = []): void {\n    if (id !== null && Object.keys(states).indexOf(id) > -1) {\n      states[id] = elements\n    }\n\n    commit()\n  }\n\n  function collect(): Array<string> {\n    const title = titleCallback('')\n\n    const defaults: Record<string, string> = {\n      ...(title ? { title: `<title inertia=\"\">${title}</title>` } : {}),\n    }\n\n    const elements = Object.values(states)\n      .reduce((carry, elements) => carry.concat(elements), [])\n      .reduce((carry, element) => {\n        if (element.indexOf('<') === -1) {\n          return carry\n        }\n\n        if (element.indexOf('<title ') === 0) {\n          const title = element.match(/(<title [^>]+>)(.*?)(<\\/title>)/)\n          carry.title = title ? `${title[1]}${titleCallback(title[2])}${title[3]}` : element\n          return carry\n        }\n\n        const match = element.match(/ inertia=\"[^\"]+\"/)\n        if (match) {\n          carry[match[0]] = element\n        } else {\n          carry[Object.keys(carry).length] = element\n        }\n\n        return carry\n      }, defaults)\n\n    return Object.values(elements)\n  }\n\n  function commit(): void {\n    isServer ? onUpdate(collect()) : Renderer.update(collect())\n  }\n\n  // By committing during initialization, we can guarantee that the default\n  // tags are set, as well as that they exist during SSR itself.\n  commit()\n\n  return {\n    forceUpdate: commit,\n    createProvider: function () {\n      const id = connect()\n\n      return {\n        update: (elements) => update(id, elements),\n        disconnect: () => disconnect(id),\n      }\n    },\n  }\n}\n", "/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\n * @license MIT */\n\nimport { ProgressSettings } from './types'\n\nconst baseComponentSelector = 'nprogress'\n\nconst settings: ProgressSettings = {\n  minimum: 0.08,\n  easing: 'linear',\n  positionUsing: 'translate3d',\n  speed: 200,\n  trickle: true,\n  trickleSpeed: 200,\n  showSpinner: true,\n  barSelector: '[role=\"bar\"]',\n  spinnerSelector: '[role=\"spinner\"]',\n  parent: 'body',\n  color: '#29d',\n  includeCSS: true,\n  template: [\n    '<div class=\"bar\" role=\"bar\">',\n    '<div class=\"peg\"></div>',\n    '</div>',\n    '<div class=\"spinner\" role=\"spinner\">',\n    '<div class=\"spinner-icon\"></div>',\n    '</div>',\n  ].join(''),\n}\n\nlet status: number | null = null\n\nconst configure = (options: Partial<ProgressSettings>) => {\n  Object.assign(settings, options)\n\n  if (settings.includeCSS) {\n    injectCSS(settings.color)\n  }\n}\n\n/**\n * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\n */\nconst set = (n: number) => {\n  const started = isStarted()\n\n  n = clamp(n, settings.minimum, 1)\n  status = n === 1 ? null : n\n\n  const progress = render(!started)\n  const bar = progress.querySelector(settings.barSelector)! as HTMLElement\n  const speed = settings.speed\n  const ease = settings.easing\n\n  progress.offsetWidth /* Repaint */\n\n  queue((next) => {\n    const barStyles = ((): Partial<CSSStyleDeclaration> => {\n      if (settings.positionUsing === 'translate3d') {\n        return {\n          transition: `all ${speed}ms ${ease}`,\n          transform: `translate3d(${toBarPercentage(n)}%,0,0)`,\n        }\n      }\n\n      if (settings.positionUsing === 'translate') {\n        return {\n          transition: `all ${speed}ms ${ease}`,\n          transform: `translate(${toBarPercentage(n)}%,0)`,\n        }\n      }\n\n      return { marginLeft: `${toBarPercentage(n)}%` }\n    })()\n\n    for (const key in barStyles) {\n      bar.style[key] = barStyles[key]!\n    }\n\n    if (n !== 1) {\n      return setTimeout(next, speed)\n    }\n\n    // Fade out\n    progress.style.transition = 'none'\n    progress.style.opacity = '1'\n    progress.offsetWidth /* Repaint */\n\n    setTimeout(() => {\n      progress.style.transition = `all ${speed}ms linear`\n      progress.style.opacity = '0'\n\n      setTimeout(() => {\n        remove()\n        next()\n      }, speed)\n    }, speed)\n  })\n}\n\nconst isStarted = () => typeof status === 'number'\n\n/**\n * Shows the progress bar.\n * This is the same as setting the status to 0%, except that it doesn't go backwards.\n */\nconst start = () => {\n  if (!status) {\n    set(0)\n  }\n\n  const work = function () {\n    setTimeout(function () {\n      if (!status) {\n        return\n      }\n\n      increaseByRandom()\n      work()\n    }, settings.trickleSpeed)\n  }\n\n  if (settings.trickle) {\n    work()\n  }\n}\n\n/**\n * Hides the progress bar.\n * This is the *sort of* the same as setting the status to 100%, with the\n * difference being `done()` makes some placebo effect of some realistic motion.\n *\n * If `true` is passed, it will show the progress bar even if it's hidden.\n */\nconst done = (force?: boolean) => {\n  if (!force && !status) {\n    return\n  }\n\n  increaseByRandom(0.3 + 0.5 * Math.random())\n  set(1)\n}\n\nconst increaseByRandom = (amount?: number) => {\n  const n = status\n\n  if (n === null) {\n    return start()\n  }\n\n  if (n > 1) {\n    return\n  }\n\n  amount =\n    typeof amount === 'number'\n      ? amount\n      : (() => {\n          const ranges: Record<number, [number, number]> = {\n            0.1: [0, 0.2],\n            0.04: [0.2, 0.5],\n            0.02: [0.5, 0.8],\n            0.005: [0.8, 0.99],\n          }\n\n          for (const r in ranges) {\n            if (n >= ranges[r][0] && n < ranges[r][1]) {\n              return parseFloat(r)\n            }\n          }\n\n          return 0\n        })()\n\n  return set(clamp(n + amount, 0, 0.994))\n}\n\n/**\n * (Internal) renders the progress bar markup based on the `template` setting.\n */\nconst render = (fromStart: boolean) => {\n  if (isRendered()) {\n    return document.getElementById(baseComponentSelector)!\n  }\n\n  document.documentElement.classList.add(`${baseComponentSelector}-busy`)\n\n  const progress = document.createElement('div')\n  progress.id = baseComponentSelector\n  progress.innerHTML = settings.template\n\n  const bar = progress.querySelector(settings.barSelector)! as HTMLElement\n  const perc = fromStart ? '-100' : toBarPercentage(status || 0)\n  const parent = getParent()\n\n  bar.style.transition = 'all 0 linear'\n  bar.style.transform = `translate3d(${perc}%,0,0)`\n\n  if (!settings.showSpinner) {\n    progress.querySelector(settings.spinnerSelector)?.remove()\n  }\n\n  if (parent !== document.body) {\n    parent.classList.add(`${baseComponentSelector}-custom-parent`)\n  }\n\n  parent.appendChild(progress)\n\n  return progress\n}\n\nconst getParent = (): HTMLElement => {\n  return (isDOM(settings.parent) ? settings.parent : document.querySelector(settings.parent)) as HTMLElement\n}\n\nconst remove = () => {\n  document.documentElement.classList.remove(`${baseComponentSelector}-busy`)\n  getParent().classList.remove(`${baseComponentSelector}-custom-parent`)\n  document.getElementById(baseComponentSelector)?.remove()\n}\n\nconst isRendered = () => {\n  return document.getElementById(baseComponentSelector) !== null\n}\n\nconst isDOM = (obj: any) => {\n  if (typeof HTMLElement === 'object') {\n    return obj instanceof HTMLElement\n  }\n\n  return obj && typeof obj === 'object' && obj.nodeType === 1 && typeof obj.nodeName === 'string'\n}\n\nfunction clamp(n: number, min: number, max: number): number {\n  if (n < min) {\n    return min\n  }\n\n  if (n > max) {\n    return max\n  }\n\n  return n\n}\n\n// Converts a percentage (`0..1`) to a bar translateX percentage (`-100%..0%`).\nconst toBarPercentage = (n: number) => (-1 + n) * 100\n\n// Queues a function to be executed.\nconst queue = (() => {\n  const pending: ((...args: any[]) => any)[] = []\n\n  const next = () => {\n    const fn = pending.shift()\n\n    if (fn) {\n      fn(next)\n    }\n  }\n\n  return (fn: (...args: any[]) => any) => {\n    pending.push(fn)\n\n    if (pending.length === 1) {\n      next()\n    }\n  }\n})()\n\nconst injectCSS = (color: string): void => {\n  const element = document.createElement('style')\n\n  element.textContent = `\n    #${baseComponentSelector} {\n      pointer-events: none;\n    }\n\n    #${baseComponentSelector} .bar {\n      background: ${color};\n\n      position: fixed;\n      z-index: 1031;\n      top: 0;\n      left: 0;\n\n      width: 100%;\n      height: 2px;\n    }\n\n    #${baseComponentSelector} .peg {\n      display: block;\n      position: absolute;\n      right: 0px;\n      width: 100px;\n      height: 100%;\n      box-shadow: 0 0 10px ${color}, 0 0 5px ${color};\n      opacity: 1.0;\n\n      transform: rotate(3deg) translate(0px, -4px);\n    }\n\n    #${baseComponentSelector} .spinner {\n      display: block;\n      position: fixed;\n      z-index: 1031;\n      top: 15px;\n      right: 15px;\n    }\n\n    #${baseComponentSelector} .spinner-icon {\n      width: 18px;\n      height: 18px;\n      box-sizing: border-box;\n\n      border: solid 2px transparent;\n      border-top-color: ${color};\n      border-left-color: ${color};\n      border-radius: 50%;\n\n      animation: ${baseComponentSelector}-spinner 400ms linear infinite;\n    }\n\n    .${baseComponentSelector}-custom-parent {\n      overflow: hidden;\n      position: relative;\n    }\n\n    .${baseComponentSelector}-custom-parent #${baseComponentSelector} .spinner,\n    .${baseComponentSelector}-custom-parent #${baseComponentSelector} .bar {\n      position: absolute;\n    }\n\n    @keyframes ${baseComponentSelector}-spinner {\n      0%   { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  `\n  document.head.appendChild(element)\n}\n\nconst hiddenStyles = (() => {\n  if (typeof document === 'undefined') {\n    return null\n  }\n\n  const el = document.createElement('style')\n\n  el.innerHTML = `#${baseComponentSelector} { display: none; }`\n\n  return el\n})()\n\nconst show = () => {\n  if (hiddenStyles && document.head.contains(hiddenStyles)) {\n    return document.head.removeChild(hiddenStyles)\n  }\n}\n\nconst hide = () => {\n  if (hiddenStyles && !document.head.contains(hiddenStyles)) {\n    document.head.appendChild(hiddenStyles)\n  }\n}\n\nexport default {\n  configure,\n  isStarted,\n  done,\n  set,\n  remove,\n  start,\n  status,\n  show,\n  hide,\n}\n", "import ProgressComponent from './progress-component'\nimport { GlobalEvent } from './types'\n\nlet hideCount = 0\n\nexport const reveal = (force = false) => {\n  hideCount = Math.max(0, hideCount - 1)\n\n  if (force || hideCount === 0) {\n    ProgressComponent.show()\n  }\n}\n\nexport const hide = () => {\n  hideCount++\n\n  ProgressComponent.hide()\n}\n\nfunction addEventListeners(delay: number): void {\n  document.addEventListener('inertia:start', (e) => start(e, delay))\n  document.addEventListener('inertia:progress', progress)\n}\n\nfunction start(event: GlobalEvent<'start'>, delay: number): void {\n  if (!event.detail.visit.showProgress) {\n    hide()\n  }\n\n  const timeout = setTimeout(() => ProgressComponent.start(), delay)\n  document.addEventListener('inertia:finish', (e) => finish(e, timeout), { once: true })\n}\n\nfunction progress(event: GlobalEvent<'progress'>): void {\n  if (ProgressComponent.isStarted() && event.detail.progress?.percentage) {\n    ProgressComponent.set(Math.max(ProgressComponent.status!, (event.detail.progress.percentage / 100) * 0.9))\n  }\n}\n\nfunction finish(event: GlobalEvent<'finish'>, timeout: NodeJS.Timeout): void {\n  clearTimeout(timeout!)\n\n  if (!ProgressComponent.isStarted()) {\n    return\n  }\n\n  if (event.detail.visit.completed) {\n    ProgressComponent.done()\n  } else if (event.detail.visit.interrupted) {\n    ProgressComponent.set(0)\n  } else if (event.detail.visit.cancelled) {\n    ProgressComponent.done()\n    ProgressComponent.remove()\n  }\n}\n\nexport default function setupProgress({\n  delay = 250,\n  color = '#29d',\n  includeCSS = true,\n  showSpinner = false,\n} = {}): void {\n  addEventListeners(delay)\n  ProgressComponent.configure({ showSpinner, includeCSS, color })\n}\n", "export default function shouldIntercept(event: MouseEvent | KeyboardEvent): boolean {\n  const isLink = (event.currentTarget as HTMLElement).tagName.toLowerCase() === 'a'\n  return !(\n    (event.target && (event?.target as HTMLElement).isContentEditable) ||\n    event.defaultPrevented ||\n    (isLink && event.which > 1) ||\n    (isLink && event.altKey) ||\n    (isLink && event.ctrlKey) ||\n    (isLink && event.metaKey) ||\n    (isLink && event.shiftKey) ||\n    (isLink && 'button' in event && event.button !== 0)\n  )\n}\n", "import { Router } from './router'\n\nexport { default as createHeadManager } from './head'\nexport { hide as hideProgress, reveal as revealProgress, default as setupProgress } from './progress'\nexport { default as shouldIntercept } from './shouldIntercept'\nexport * from './types'\nexport { hrefToUrl, mergeDataIntoQueryString, urlWithoutHash } from './url'\nexport { type Router }\n\nexport const router = new Router()\n", "export { router } from '@inertiajs/core'\nexport { usePage } from './app'\nexport { default as createInertiaApp } from './createInertiaApp'\nexport { default as Deferred } from './deferred'\nexport { default as Head } from './head'\nexport { InertiaLinkProps, default as Link } from './link'\nexport * from './types'\nexport { InertiaForm, default as useForm } from './useForm'\nexport { default as usePoll } from './usePoll'\nexport { default as usePrefetch } from './usePrefetch'\nexport { default as useRemember } from './useRemember'\nexport { default as WhenVisible } from './whenVisible'\n", "import { createHeadManager, Page, PageProps, router } from '@inertiajs/core'\nimport {\n  computed,\n  DefineComponent,\n  defineComponent,\n  h,\n  markRaw,\n  Plugin,\n  PropType,\n  reactive,\n  ref,\n  shallowRef,\n} from 'vue'\nimport remember from './remember'\nimport { VuePageHandlerArgs } from './types'\nimport useForm from './useForm'\n\nexport interface InertiaAppProps {\n  initialPage: Page\n  initialComponent?: object\n  resolveComponent?: (name: string) => DefineComponent | Promise<DefineComponent>\n  titleCallback?: (title: string) => string\n  onHeadUpdate?: (elements: string[]) => void\n}\n\nexport type InertiaApp = DefineComponent<InertiaAppProps>\n\nconst component = ref(null)\nconst page = ref<Page<any>>(null)\nconst layout = shallowRef(null)\nconst key = ref(null)\nlet headManager = null\n\nconst App: InertiaApp = defineComponent({\n  name: 'Inertia',\n  props: {\n    initialPage: {\n      type: Object as PropType<Page>,\n      required: true,\n    },\n    initialComponent: {\n      type: Object,\n      required: false,\n    },\n    resolveComponent: {\n      type: Function as PropType<(name: string) => DefineComponent | Promise<DefineComponent>>,\n      required: false,\n    },\n    titleCallback: {\n      type: Function as PropType<(title: string) => string>,\n      required: false,\n      default: (title) => title,\n    },\n    onHeadUpdate: {\n      type: Function as PropType<(elements: string[]) => void>,\n      required: false,\n      default: () => () => {},\n    },\n  },\n  setup({ initialPage, initialComponent, resolveComponent, titleCallback, onHeadUpdate }) {\n    component.value = initialComponent ? markRaw(initialComponent) : null\n    page.value = initialPage\n    key.value = null\n\n    const isServer = typeof window === 'undefined'\n    headManager = createHeadManager(isServer, titleCallback, onHeadUpdate)\n\n    if (!isServer) {\n      router.init({\n        initialPage,\n        resolveComponent,\n        swapComponent: async (args: VuePageHandlerArgs) => {\n          component.value = markRaw(args.component)\n          page.value = args.page\n          key.value = args.preserveState ? key.value : Date.now()\n        },\n      })\n\n      router.on('navigate', () => headManager.forceUpdate())\n    }\n\n    return () => {\n      if (component.value) {\n        component.value.inheritAttrs = !!component.value.inheritAttrs\n\n        const child = h(component.value, {\n          ...page.value.props,\n          key: key.value,\n        })\n\n        if (layout.value) {\n          component.value.layout = layout.value\n          layout.value = null\n        }\n\n        if (component.value.layout) {\n          if (typeof component.value.layout === 'function') {\n            return component.value.layout(h, child)\n          }\n\n          return (Array.isArray(component.value.layout) ? component.value.layout : [component.value.layout])\n            .concat(child)\n            .reverse()\n            .reduce((child, layout) => {\n              layout.inheritAttrs = !!layout.inheritAttrs\n              return h(layout, { ...page.value.props }, () => child)\n            })\n        }\n\n        return child\n      }\n    }\n  },\n})\nexport default App\n\nexport const plugin: Plugin = {\n  install(app) {\n    router.form = useForm\n\n    Object.defineProperty(app.config.globalProperties, '$inertia', { get: () => router })\n    Object.defineProperty(app.config.globalProperties, '$page', { get: () => page.value })\n    Object.defineProperty(app.config.globalProperties, '$headManager', { get: () => headManager })\n\n    app.mixin(remember)\n  },\n}\n\nexport function usePage<SharedProps extends PageProps>(): Page<SharedProps> {\n  return reactive({\n    props: computed(() => page.value?.props),\n    url: computed(() => page.value?.url),\n    component: computed(() => page.value?.component),\n    version: computed(() => page.value?.version),\n    clearHistory: computed(() => page.value?.clearHistory),\n    deferredProps: computed(() => page.value?.deferredProps),\n    mergeProps: computed(() => page.value?.mergeProps),\n    scrollRegions: computed(() => page.value?.scrollRegions),\n    rememberedState: computed(() => page.value?.rememberedState),\n    encryptHistory: computed(() => page.value?.encryptHistory),\n  })\n}\n", "import { router } from '@inertiajs/core'\nimport cloneDeep from 'lodash.clonedeep'\nimport { ComponentOptions } from 'vue'\n\nconst remember: ComponentOptions = {\n  created() {\n    if (!this.$options.remember) {\n      return\n    }\n\n    if (Array.isArray(this.$options.remember)) {\n      this.$options.remember = { data: this.$options.remember }\n    }\n\n    if (typeof this.$options.remember === 'string') {\n      this.$options.remember = { data: [this.$options.remember] }\n    }\n\n    if (typeof this.$options.remember.data === 'string') {\n      this.$options.remember = { data: [this.$options.remember.data] }\n    }\n\n    const rememberKey =\n      this.$options.remember.key instanceof Function\n        ? this.$options.remember.key.call(this)\n        : this.$options.remember.key\n\n    const restored = router.restore(rememberKey)\n\n    const rememberable = this.$options.remember.data.filter((key) => {\n      return !(this[key] !== null && typeof this[key] === 'object' && this[key].__rememberable === false)\n    })\n\n    const hasCallbacks = (key) => {\n      return (\n        this[key] !== null &&\n        typeof this[key] === 'object' &&\n        typeof this[key].__remember === 'function' &&\n        typeof this[key].__restore === 'function'\n      )\n    }\n\n    rememberable.forEach((key) => {\n      if (this[key] !== undefined && restored !== undefined && restored[key] !== undefined) {\n        hasCallbacks(key) ? this[key].__restore(restored[key]) : (this[key] = restored[key])\n      }\n\n      this.$watch(\n        key,\n        () => {\n          router.remember(\n            rememberable.reduce(\n              (data, key) => ({\n                ...data,\n                [key]: cloneDeep(hasCallbacks(key) ? this[key].__remember() : this[key]),\n              }),\n              {},\n            ),\n            rememberKey,\n          )\n        },\n        { immediate: true, deep: true },\n      )\n    })\n  },\n}\n\nexport default remember\n", "import { FormDataConvertible, Method, Progress, router, VisitOptions } from '@inertiajs/core'\nimport cloneDeep from 'lodash.clonedeep'\nimport isEqual from 'lodash.isequal'\nimport { reactive, watch } from 'vue'\n\ntype FormDataType = object\n\ninterface InertiaFormProps<TForm extends FormDataType> {\n  isDirty: boolean\n  errors: Partial<Record<keyof TForm, string>>\n  hasErrors: boolean\n  processing: boolean\n  progress: Progress | null\n  wasSuccessful: boolean\n  recentlySuccessful: boolean\n  data(): TForm\n  transform(callback: (data: TForm) => object): this\n  defaults(): this\n  defaults(field: keyof TForm, value: FormDataConvertible): this\n  defaults(fields: Partial<TForm>): this\n  reset(...fields: (keyof TForm)[]): this\n  clearErrors(...fields: (keyof TForm)[]): this\n  setError(field: keyof TForm, value: string): this\n  setError(errors: Record<keyof TForm, string>): this\n  submit(method: Method, url: string, options?: Partial<VisitOptions>): void\n  get(url: string, options?: Partial<VisitOptions>): void\n  post(url: string, options?: Partial<VisitOptions>): void\n  put(url: string, options?: Partial<VisitOptions>): void\n  patch(url: string, options?: Partial<VisitOptions>): void\n  delete(url: string, options?: Partial<VisitOptions>): void\n  cancel(): void\n}\n\nexport type InertiaForm<TForm extends FormDataType> = TForm & InertiaFormProps<TForm>\n\nexport default function useForm<TForm extends FormDataType>(data: TForm | (() => TForm)): InertiaForm<TForm>\nexport default function useForm<TForm extends FormDataType>(\n  rememberKey: string,\n  data: TForm | (() => TForm),\n): InertiaForm<TForm>\nexport default function useForm<TForm extends FormDataType>(\n  rememberKeyOrData: string | TForm | (() => TForm),\n  maybeData?: TForm | (() => TForm),\n): InertiaForm<TForm> {\n  const rememberKey = typeof rememberKeyOrData === 'string' ? rememberKeyOrData : null\n  const data = typeof rememberKeyOrData === 'string' ? maybeData : rememberKeyOrData\n  const restored = rememberKey\n    ? (router.restore(rememberKey) as { data: TForm; errors: Record<keyof TForm, string> })\n    : null\n  let defaults = typeof data === 'object' ? cloneDeep(data) : cloneDeep(data())\n  let cancelToken = null\n  let recentlySuccessfulTimeoutId = null\n  let transform = (data) => data\n\n  const form = reactive({\n    ...(restored ? restored.data : cloneDeep(defaults)),\n    isDirty: false,\n    errors: restored ? restored.errors : {},\n    hasErrors: false,\n    processing: false,\n    progress: null,\n    wasSuccessful: false,\n    recentlySuccessful: false,\n    data() {\n      return (Object.keys(defaults) as Array<keyof TForm>).reduce((carry, key) => {\n        carry[key] = this[key]\n        return carry\n      }, {} as Partial<TForm>) as TForm\n    },\n    transform(callback) {\n      transform = callback\n\n      return this\n    },\n    defaults(fieldOrFields?: keyof TForm | Partial<TForm>, maybeValue?: FormDataConvertible) {\n      if (typeof data === 'function') {\n        throw new Error('You cannot call `defaults()` when using a function to define your form data.')\n      }\n\n      if (typeof fieldOrFields === 'undefined') {\n        defaults = this.data()\n      } else {\n        defaults = Object.assign(\n          {},\n          cloneDeep(defaults),\n          typeof fieldOrFields === 'string' ? { [fieldOrFields]: maybeValue } : fieldOrFields,\n        )\n      }\n\n      return this\n    },\n    reset(...fields) {\n      const resolvedData = typeof data === 'object' ? cloneDeep(defaults) : cloneDeep(data())\n      const clonedData = cloneDeep(resolvedData)\n      if (fields.length === 0) {\n        defaults = clonedData\n        Object.assign(this, resolvedData)\n      } else {\n        Object.keys(resolvedData)\n          .filter((key) => fields.includes(key))\n          .forEach((key) => {\n            defaults[key] = clonedData[key]\n            this[key] = resolvedData[key]\n          })\n      }\n\n      return this\n    },\n    setError(fieldOrFields: keyof TForm | Record<keyof TForm, string>, maybeValue?: string) {\n      Object.assign(this.errors, typeof fieldOrFields === 'string' ? { [fieldOrFields]: maybeValue } : fieldOrFields)\n\n      this.hasErrors = Object.keys(this.errors).length > 0\n\n      return this\n    },\n    clearErrors(...fields) {\n      this.errors = Object.keys(this.errors).reduce(\n        (carry, field) => ({\n          ...carry,\n          ...(fields.length > 0 && !fields.includes(field) ? { [field]: this.errors[field] } : {}),\n        }),\n        {},\n      )\n\n      this.hasErrors = Object.keys(this.errors).length > 0\n\n      return this\n    },\n    submit(method, url, options: VisitOptions = {}) {\n      const data = transform(this.data())\n      const _options = {\n        ...options,\n        onCancelToken: (token) => {\n          cancelToken = token\n\n          if (options.onCancelToken) {\n            return options.onCancelToken(token)\n          }\n        },\n        onBefore: (visit) => {\n          this.wasSuccessful = false\n          this.recentlySuccessful = false\n          clearTimeout(recentlySuccessfulTimeoutId)\n\n          if (options.onBefore) {\n            return options.onBefore(visit)\n          }\n        },\n        onStart: (visit) => {\n          this.processing = true\n\n          if (options.onStart) {\n            return options.onStart(visit)\n          }\n        },\n        onProgress: (event) => {\n          this.progress = event\n\n          if (options.onProgress) {\n            return options.onProgress(event)\n          }\n        },\n        onSuccess: async (page) => {\n          this.processing = false\n          this.progress = null\n          this.clearErrors()\n          this.wasSuccessful = true\n          this.recentlySuccessful = true\n          recentlySuccessfulTimeoutId = setTimeout(() => (this.recentlySuccessful = false), 2000)\n\n          const onSuccess = options.onSuccess ? await options.onSuccess(page) : null\n          defaults = cloneDeep(this.data())\n          this.isDirty = false\n          return onSuccess\n        },\n        onError: (errors) => {\n          this.processing = false\n          this.progress = null\n          this.clearErrors().setError(errors)\n\n          if (options.onError) {\n            return options.onError(errors)\n          }\n        },\n        onCancel: () => {\n          this.processing = false\n          this.progress = null\n\n          if (options.onCancel) {\n            return options.onCancel()\n          }\n        },\n        onFinish: (visit) => {\n          this.processing = false\n          this.progress = null\n          cancelToken = null\n\n          if (options.onFinish) {\n            return options.onFinish(visit)\n          }\n        },\n      }\n\n      if (method === 'delete') {\n        router.delete(url, { ..._options, data })\n      } else {\n        router[method](url, data, _options)\n      }\n    },\n    get(url, options) {\n      this.submit('get', url, options)\n    },\n    post(url, options) {\n      this.submit('post', url, options)\n    },\n    put(url, options) {\n      this.submit('put', url, options)\n    },\n    patch(url, options) {\n      this.submit('patch', url, options)\n    },\n    delete(url, options) {\n      this.submit('delete', url, options)\n    },\n    cancel() {\n      if (cancelToken) {\n        cancelToken.cancel()\n      }\n    },\n    __rememberable: rememberKey === null,\n    __remember() {\n      return { data: this.data(), errors: this.errors }\n    },\n    __restore(restored) {\n      Object.assign(this, restored.data)\n      this.setError(restored.errors)\n    },\n  })\n\n  watch(\n    form,\n    (newValue) => {\n      form.isDirty = !isEqual(form.data(), defaults)\n      if (rememberKey) {\n        router.remember(cloneDeep(newValue.__remember()), rememberKey)\n      }\n    },\n    { immediate: true, deep: true },\n  )\n\n  return form\n}\n", "import { Page, router, setupProgress } from '@inertiajs/core'\nimport { DefineComponent, Plugin, App as VueApp, createSSRApp, h } from 'vue'\nimport App, { InertiaApp, InertiaAppProps, plugin } from './app'\n\ninterface CreateInertiaAppProps {\n  id?: string\n  resolve: (name: string) => DefineComponent | Promise<DefineComponent> | { default: DefineComponent }\n  setup: (props: { el: Element; App: InertiaApp; props: InertiaAppProps; plugin: Plugin }) => void | VueApp\n  title?: (title: string) => string\n  progress?:\n    | false\n    | {\n        delay?: number\n        color?: string\n        includeCSS?: boolean\n        showSpinner?: boolean\n      }\n  page?: Page\n  render?: (app: VueApp) => Promise<string>\n}\n\nexport default async function createInertiaApp({\n  id = 'app',\n  resolve,\n  setup,\n  title,\n  progress = {},\n  page,\n  render,\n}: CreateInertiaAppProps): Promise<{ head: string[]; body: string }> {\n  const isServer = typeof window === 'undefined'\n  const el = isServer ? null : document.getElementById(id)\n  const initialPage = page || JSON.parse(el.dataset.page)\n  const resolveComponent = (name) => Promise.resolve(resolve(name)).then((module) => module.default || module)\n\n  let head = []\n\n  const vueApp = await Promise.all([\n    resolveComponent(initialPage.component),\n    router.decryptHistory().catch(() => {}),\n  ]).then(([initialComponent]) => {\n    return setup({\n      el,\n      App,\n      props: {\n        initialPage,\n        initialComponent,\n        resolveComponent,\n        titleCallback: title,\n        onHeadUpdate: isServer ? (elements) => (head = elements) : null,\n      },\n      plugin,\n    })\n  })\n\n  if (!isServer && progress) {\n    setupProgress(progress)\n  }\n\n  if (isServer) {\n    const body = await render(\n      createSSRApp({\n        render: () =>\n          h('div', {\n            id,\n            'data-page': JSON.stringify(initialPage),\n            innerHTML: vueApp ? render(vueApp) : '',\n          }),\n      }),\n    )\n\n    return { head, body }\n  }\n}\n", "import { defineComponent } from 'vue'\n\nexport default defineComponent({\n  name: 'Deferred',\n  props: {\n    data: {\n      type: [String, Array<String>],\n      required: true,\n    },\n  },\n  render() {\n    const keys = (Array.isArray(this.$props.data) ? this.$props.data : [this.$props.data]) as string[]\n\n    if (!this.$slots.fallback) {\n      throw new Error('`<Deferred>` requires a `<template #fallback>` slot')\n    }\n\n    return keys.every((key) => this.$page.props[key] !== undefined) ? this.$slots.default() : this.$slots.fallback()\n  },\n})\n", "import { defineComponent, DefineComponent } from 'vue'\n\nexport type InertiaHead = DefineComponent<{\n  title?: string\n}>\n\nconst Head: InertiaHead = defineComponent({\n  props: {\n    title: {\n      type: String,\n      required: false,\n    },\n  },\n  data() {\n    return {\n      provider: this.$headManager.createProvider(),\n    }\n  },\n  beforeUnmount() {\n    this.provider.disconnect()\n  },\n  methods: {\n    isUnaryTag(node) {\n      return (\n        [\n          'area',\n          'base',\n          'br',\n          'col',\n          'embed',\n          'hr',\n          'img',\n          'input',\n          'keygen',\n          'link',\n          'meta',\n          'param',\n          'source',\n          'track',\n          'wbr',\n        ].indexOf(node.type) > -1\n      )\n    },\n    renderTagStart(node) {\n      node.props = node.props || {}\n      node.props.inertia = node.props['head-key'] !== undefined ? node.props['head-key'] : ''\n      const attrs = Object.keys(node.props).reduce((carry, name) => {\n        const value = node.props[name]\n        if (['key', 'head-key'].includes(name)) {\n          return carry\n        } else if (value === '') {\n          return carry + ` ${name}`\n        } else {\n          return carry + ` ${name}=\"${value}\"`\n        }\n      }, '')\n      return `<${node.type}${attrs}>`\n    },\n    renderTagChildren(node) {\n      return typeof node.children === 'string'\n        ? node.children\n        : node.children.reduce((html, child) => html + this.renderTag(child), '')\n    },\n    isFunctionNode(node) {\n      return typeof node.type === 'function'\n    },\n    isComponentNode(node) {\n      return typeof node.type === 'object'\n    },\n    isCommentNode(node) {\n      return /(comment|cmt)/i.test(node.type.toString())\n    },\n    isFragmentNode(node) {\n      return /(fragment|fgt|symbol\\(\\))/i.test(node.type.toString())\n    },\n    isTextNode(node) {\n      return /(text|txt)/i.test(node.type.toString())\n    },\n    renderTag(node) {\n      if (this.isTextNode(node)) {\n        return node.children\n      } else if (this.isFragmentNode(node)) {\n        return ''\n      } else if (this.isCommentNode(node)) {\n        return ''\n      }\n      let html = this.renderTagStart(node)\n      if (node.children) {\n        html += this.renderTagChildren(node)\n      }\n      if (!this.isUnaryTag(node)) {\n        html += `</${node.type}>`\n      }\n      return html\n    },\n    addTitleElement(elements) {\n      if (this.title && !elements.find((tag) => tag.startsWith('<title'))) {\n        elements.push(`<title inertia>${this.title}</title>`)\n      }\n      return elements\n    },\n    renderNodes(nodes) {\n      return this.addTitleElement(\n        nodes\n          .flatMap((node) => this.resolveNode(node))\n          .map((node) => this.renderTag(node))\n          .filter((node) => node),\n      )\n    },\n    resolveNode(node) {\n      if (this.isFunctionNode(node)) {\n        return this.resolveNode(node.type())\n      } else if (this.isComponentNode(node)) {\n        console.warn(`Using components in the <Head> component is not supported.`)\n        return []\n      } else if (this.isTextNode(node) && node.children) {\n        return node\n      } else if (this.isFragmentNode(node) && node.children) {\n        return node.children.flatMap((child) => this.resolveNode(child))\n      } else if (this.isCommentNode(node)) {\n        return []\n      } else {\n        return node\n      }\n    },\n  },\n  render() {\n    this.provider.update(this.renderNodes(this.$slots.default ? this.$slots.default() : []))\n  },\n})\n\nexport default Head\n", "import {\n  CacheForOption,\n  FormDataConvertible,\n  LinkPrefetchOption,\n  mergeDataIntoQueryString,\n  Method,\n  PendingVisit,\n  PreserveStateOption,\n  Progress,\n  router,\n  shouldIntercept,\n} from '@inertiajs/core'\nimport { computed, defineComponent, DefineComponent, h, onMounted, onUnmounted, PropType, ref } from 'vue'\n\nexport interface InertiaLinkProps {\n  as?: string\n  data?: Record<string, FormDataConvertible>\n  href: string\n  method?: Method\n  headers?: Record<string, string>\n  onClick?: (event: MouseEvent) => void\n  preserveScroll?: PreserveStateOption\n  preserveState?: PreserveStateOption\n  replace?: boolean\n  only?: string[]\n  except?: string[]\n  onCancelToken?: (cancelToken: import('axios').CancelTokenSource) => void\n  onBefore?: () => void\n  onStart?: (visit: PendingVisit) => void\n  onProgress?: (progress: Progress) => void\n  onFinish?: (visit: PendingVisit) => void\n  onCancel?: () => void\n  onSuccess?: () => void\n  onError?: () => void\n  queryStringArrayFormat?: 'brackets' | 'indices'\n  async?: boolean\n  prefetch?: boolean | LinkPrefetchOption | LinkPrefetchOption[]\n  cacheFor?: CacheForOption | CacheForOption[]\n}\n\ntype InertiaLink = DefineComponent<InertiaLinkProps>\n\n// @ts-ignore\nconst Link: InertiaLink = defineComponent({\n  name: 'Link',\n  props: {\n    as: {\n      type: String,\n      default: 'a',\n    },\n    data: {\n      type: Object,\n      default: () => ({}),\n    },\n    href: {\n      type: String,\n      required: true,\n    },\n    method: {\n      type: String as PropType<Method>,\n      default: 'get',\n    },\n    replace: {\n      type: Boolean,\n      default: false,\n    },\n    preserveScroll: {\n      type: Boolean,\n      default: false,\n    },\n    preserveState: {\n      type: Boolean,\n      default: null,\n    },\n    only: {\n      type: Array<string>,\n      default: () => [],\n    },\n    except: {\n      type: Array<string>,\n      default: () => [],\n    },\n    headers: {\n      type: Object,\n      default: () => ({}),\n    },\n    queryStringArrayFormat: {\n      type: String as PropType<'brackets' | 'indices'>,\n      default: 'brackets',\n    },\n    async: {\n      type: Boolean,\n      default: false,\n    },\n    prefetch: {\n      type: [Boolean, String, Array] as PropType<boolean | LinkPrefetchOption | LinkPrefetchOption[]>,\n      default: false,\n    },\n    cacheFor: {\n      type: [Number, String, Array] as PropType<CacheForOption | CacheForOption[]>,\n      default: 0,\n    },\n    onStart: {\n      type: Function as PropType<(visit: PendingVisit) => void>,\n      default: (_visit: PendingVisit) => {},\n    },\n    onProgress: {\n      type: Function as PropType<(progress: Progress) => void>,\n      default: () => {},\n    },\n    onFinish: {\n      type: Function as PropType<(visit: PendingVisit) => void>,\n      default: () => {},\n    },\n    onBefore: {\n      type: Function as PropType<() => void>,\n      default: () => {},\n    },\n    onCancel: {\n      type: Function as PropType<() => void>,\n      default: () => {},\n    },\n    onSuccess: {\n      type: Function as PropType<() => void>,\n      default: () => {},\n    },\n    onError: {\n      type: Function as PropType<() => void>,\n      default: () => {},\n    },\n    onCancelToken: {\n      type: Function as PropType<(cancelToken: import('axios').CancelTokenSource) => void>,\n      default: () => {},\n    },\n  },\n  setup(props, { slots, attrs }) {\n    const inFlightCount = ref(0)\n    const hoverTimeout = ref(null)\n\n    const prefetchModes: LinkPrefetchOption[] = (() => {\n      if (props.prefetch === true) {\n        return ['hover']\n      }\n\n      if (props.prefetch === false) {\n        return []\n      }\n\n      if (Array.isArray(props.prefetch)) {\n        return props.prefetch\n      }\n\n      return [props.prefetch]\n    })()\n\n    const cacheForValue = (() => {\n      if (props.cacheFor !== 0) {\n        // If they've provided a value, respect it\n        return props.cacheFor\n      }\n\n      if (prefetchModes.length === 1 && prefetchModes[0] === 'click') {\n        // If they've only provided a prefetch mode of 'click',\n        // we should only prefetch for the next request but not keep it around\n        return 0\n      }\n\n      // Otherwise, default to 30 seconds\n      return 30_000\n    })()\n\n    onMounted(() => {\n      if (prefetchModes.includes('mount')) {\n        prefetch()\n      }\n    })\n\n    onUnmounted(() => {\n      clearTimeout(hoverTimeout.value)\n    })\n\n    const method = props.method.toLowerCase() as Method\n    const as = method !== 'get' ? 'button' : props.as.toLowerCase()\n    const mergeDataArray = computed(() =>\n      mergeDataIntoQueryString(method, props.href || '', props.data, props.queryStringArrayFormat),\n    )\n    const href = computed(() => mergeDataArray.value[0])\n    const data = computed(() => mergeDataArray.value[1])\n\n    const elProps = computed(() => ({\n      a: { href: href.value },\n      button: { type: 'button' },\n    }))\n\n    const baseParams = {\n      data: data.value,\n      method: method,\n      replace: props.replace,\n      preserveScroll: props.preserveScroll,\n      preserveState: props.preserveState ?? method !== 'get',\n      only: props.only,\n      except: props.except,\n      headers: props.headers,\n      async: props.async,\n    }\n\n    const visitParams = {\n      ...baseParams,\n      onCancelToken: props.onCancelToken,\n      onBefore: props.onBefore,\n      onStart: (event) => {\n        inFlightCount.value++\n        props.onStart(event)\n      },\n      onProgress: props.onProgress,\n      onFinish: (event) => {\n        inFlightCount.value--\n        props.onFinish(event)\n      },\n      onCancel: props.onCancel,\n      onSuccess: props.onSuccess,\n      onError: props.onError,\n    }\n\n    const prefetch = () => {\n      router.prefetch(href.value, baseParams, { cacheFor: cacheForValue })\n    }\n\n    const regularEvents = {\n      onClick: (event) => {\n        if (shouldIntercept(event)) {\n          event.preventDefault()\n          router.visit(href.value, visitParams)\n        }\n      },\n    }\n\n    const prefetchHoverEvents = {\n      onMouseenter: () => {\n        hoverTimeout.value = setTimeout(() => {\n          prefetch()\n        }, 75)\n      },\n      onMouseleave: () => {\n        clearTimeout(hoverTimeout.value)\n      },\n      onClick: regularEvents.onClick,\n    }\n\n    const prefetchClickEvents = {\n      onMousedown: (event) => {\n        if (shouldIntercept(event)) {\n          event.preventDefault()\n          prefetch()\n        }\n      },\n      onMouseup: (event) => {\n        event.preventDefault()\n        router.visit(href.value, visitParams)\n      },\n      onClick: (event) => {\n        if (shouldIntercept(event)) {\n          // Let the mouseup event handle the visit\n          event.preventDefault()\n        }\n      },\n    }\n\n    return () => {\n      return h(\n        as,\n        {\n          ...attrs,\n          ...(elProps.value[as] || {}),\n          'data-loading': inFlightCount.value > 0 ? '' : undefined,\n          ...(() => {\n            if (prefetchModes.includes('hover')) {\n              return prefetchHoverEvents\n            }\n\n            if (prefetchModes.includes('click')) {\n              return prefetchClickEvents\n            }\n\n            return regularEvents\n          })(),\n        },\n        slots,\n      )\n    }\n  },\n})\n\nexport default Link\n", "import { PollOptions, ReloadOptions, router } from '@inertiajs/core'\nimport { onMounted, onUnmounted } from 'vue'\n\nexport default function usePoll(\n  interval: number,\n  requestOptions: ReloadOptions = {},\n  options: PollOptions = {\n    keepAlive: false,\n    autoStart: true,\n  },\n): {\n  stop: VoidFunction\n  start: VoidFunction\n} {\n  const { stop, start } = router.poll(interval, requestOptions, {\n    ...options,\n    autoStart: false,\n  })\n\n  onMounted(() => {\n    if (options.autoStart ?? true) {\n      start()\n    }\n  })\n\n  onUnmounted(() => {\n    stop()\n  })\n\n  return {\n    stop,\n    start,\n  }\n}\n", "import { router, VisitOptions } from '@inertiajs/core'\nimport { onMounted, onUnmounted, ref, Ref } from 'vue'\n\nexport default function usePrefetch(options: VisitOptions = {}): {\n  lastUpdatedAt: Ref<number | null>\n  isPrefetching: Ref<boolean>\n  isPrefetched: Ref<boolean>\n  flush: () => void\n} {\n  const isPrefetching = ref(false)\n  const lastUpdatedAt = ref<number | null>(null)\n  const isPrefetched = ref(false)\n\n  const cached = typeof window === 'undefined' ? null : router.getCached(window.location.pathname, options)\n  const inFlight = typeof window === 'undefined' ? null : router.getPrefetching(window.location.pathname, options)\n\n  lastUpdatedAt.value = cached?.staleTimestamp || null\n\n  isPrefetching.value = inFlight !== null\n  isPrefetched.value = cached !== null\n\n  let onPrefetchedListener\n  let onPrefetchingListener\n\n  onMounted(() => {\n    onPrefetchingListener = router.on('prefetching', (e) => {\n      if (e.detail.visit.url.pathname === window.location.pathname) {\n        isPrefetching.value = true\n      }\n    })\n\n    onPrefetchedListener = router.on('prefetched', (e) => {\n      if (e.detail.visit.url.pathname === window.location.pathname) {\n        isPrefetching.value = false\n        isPrefetched.value = true\n      }\n    })\n  })\n\n  onUnmounted(() => {\n    onPrefetchedListener()\n    onPrefetchingListener()\n  })\n\n  return {\n    lastUpdatedAt,\n    isPrefetching,\n    isPrefetched,\n    flush: () => router.flush(window.location.pathname, options),\n  }\n}\n", "import { router } from '@inertiajs/core'\nimport cloneDeep from 'lodash.clonedeep'\nimport { isReactive, reactive, ref, Ref, watch } from 'vue'\n\nexport default function useRemember<T extends object>(\n  data: T & { __rememberable?: boolean; __remember?: Function; __restore?: Function },\n  key?: string,\n): Ref<T> | T {\n  if (typeof data === 'object' && data !== null && data.__rememberable === false) {\n    return data\n  }\n\n  const restored = router.restore(key)\n  const type = isReactive(data) ? reactive : ref\n  const hasCallbacks = typeof data.__remember === 'function' && typeof data.__restore === 'function'\n  const remembered = type(restored === undefined ? data : hasCallbacks ? data.__restore(restored) : restored)\n\n  watch(\n    remembered,\n    (newValue) => {\n      router.remember(cloneDeep(hasCallbacks ? data.__remember() : newValue), key)\n    },\n    { immediate: true, deep: true },\n  )\n\n  return remembered\n}\n", "import { ReloadOptions, router } from '@inertiajs/core'\nimport { defineComponent, h, PropType } from 'vue'\n\nexport default defineComponent({\n  name: 'WhenVisible',\n  props: {\n    data: {\n      type: [String, Array<String>],\n    },\n    params: {\n      type: Object as PropType<ReloadOptions>,\n    },\n    buffer: {\n      type: Number,\n      default: 0,\n    },\n    as: {\n      type: String,\n      default: 'div',\n    },\n    always: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      loaded: false,\n      fetching: false,\n      observer: null,\n    }\n  },\n  unmounted() {\n    this.observer?.disconnect()\n  },\n  mounted() {\n    this.observer = new IntersectionObserver(\n      (entries) => {\n        if (!entries[0].isIntersecting) {\n          return\n        }\n\n        if (!this.$props.always) {\n          this.observer.disconnect()\n        }\n\n        if (this.fetching) {\n          return\n        }\n\n        this.fetching = true\n\n        const reloadParams = this.getReloadParams()\n\n        router.reload({\n          ...reloadParams,\n          onStart: (e) => {\n            this.fetching = true\n            reloadParams.onStart?.(e)\n          },\n          onFinish: (e) => {\n            this.loaded = true\n            this.fetching = false\n            reloadParams.onFinish?.(e)\n          },\n        })\n      },\n      {\n        rootMargin: `${this.$props.buffer}px`,\n      },\n    )\n\n    this.observer.observe(this.$el.nextSibling)\n  },\n  methods: {\n    getReloadParams(): Partial<ReloadOptions> {\n      if (this.$props.data) {\n        return {\n          only: (Array.isArray(this.$props.data) ? this.$props.data : [this.$props.data]) as string[],\n        }\n      }\n\n      if (!this.$props.params) {\n        throw new Error('You must provide either a `data` or `params` prop.')\n      }\n\n      return this.$props.params\n    },\n  },\n  render() {\n    const els = []\n\n    if (this.$props.always || !this.loaded) {\n      els.push(h(this.$props.as))\n    }\n\n    if (!this.loaded) {\n      els.push(this.$slots.fallback ? this.$slots.fallback() : null)\n    } else if (this.$slots.default) {\n      els.push(this.$slots.default())\n    }\n\n    return els\n  },\n})\n"],
  "mappings": "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",
  "names": ["debounce", "fn", "delay", "timeoutID", "args", "fireEvent", "name", "options", "fireBeforeEvent", "visit", "fireErrorEvent", "errors", "fireExceptionEvent", "exception", "fireFinishEvent", "fireInvalidEvent", "response", "fireNavigateEvent", "page", "fireProgressEvent", "progress", "fireStartEvent", "fireSuccessEvent", "firePrefetchedEvent", "firePrefetchingEvent", "SessionStorage", "key", "value", "existing", "nestedKey", "encryptHistory", "data", "iv", "getIv", "storedKey", "getKeyFromSessionStorage", "getOrCreateKey", "encryptData", "historySessionStorageKeys", "decryptHistory", "decryptData", "textEncoder", "str", "encoded", "result", "decrypted", "ivString", "createKey", "saveKey", "keyData", "newKey", "stringKey", "Scroll", "history", "region", "index", "scrollPosition", "event", "target", "hasFiles", "isFormData", "objectToFormData", "source", "form", "parentKey", "append", "composeKey", "parent", "hrefToUrl", "href", "transformUrlAndData", "method", "forceFormData", "queryStringArrayFormat", "url", "_href", "_data", "mergeDataIntoQueryString", "qsArrayFormat", "hasHost", "hasAbsolutePath", "hasRelativePath", "hasSearch", "hasHash", "deepmerge", "urlWithoutHash", "setHashIfSameUrl", "originUrl", "destinationUrl", "isSameUrlWithoutHash", "url1", "url2", "CurrentPage", "initialPage", "swapComponent", "resolveComponent", "replace", "preserveScroll", "preserveState", "componentId", "component", "location", "resolve", "isNewComponent", "eventHandler", "hash", "regions", "callback", "listener", "isServer", "History", "cb", "next", "pageData", "defaultValue", "state", "EventHandler", "type", "NavigationType", "navigationType", "InitialVisit", "handler", "locationVisit", "rememberedState", "scrollRegions", "Poll", "interval", "hidden", "Polls", "poll", "polls", "objectsAreEqual", "obj1", "obj2", "excludeKeys", "compareValues", "value1", "value2", "conversionMap", "timeToMs", "time", "unit", "conversion", "PrefetchedRequests", "params", "sendFunc", "cacheFor", "stale", "expires", "promise", "reject", "error", "visitParams", "prefetching", "removalTimer", "prefetched", "timer", "expiresIn", "id", "params1", "params2", "prefetchedRequests", "RequestParams", "wrappedCallbacks", "cancelled", "interrupted", "headers", "only", "toMerge", "modal_default", "html", "a", "iframe", "ResponseQueue", "nextResponse", "queue", "Response", "requestParams", "originatingPage", "scopedErrors", "locationUrl", "status", "header", "pageResponse", "originatingUrl", "currentPageUrl", "responseUrl", "prop", "incomingProp", "Request", "originallyPrefetch", "axios", "RequestStream", "maxConcurrent", "interruptible", "request", "r", "force", "Router", "requestOptions", "events", "requestStream", "reveal", "visitUrl", "currentUrl", "hide", "checkIfPageIsDefined", "current", "props", "pendingVisitOptions", "mergedOptions", "deferred", "_", "group", "Renderer", "tag", "template", "node", "script", "element", "elements", "sourceElements", "targetElement", "sourceElement", "createHeadManager", "titleCallback", "onUpdate", "states", "lastProviderId", "connect", "disconnect", "commit", "update", "collect", "title", "defaults", "carry", "match", "baseComponentSelector", "settings", "configure", "injectCSS", "set", "n", "started", "isStarted", "clamp", "render", "bar", "speed", "ease", "barStyles", "toBarPercentage", "remove", "start", "work", "increaseByRandom", "done", "amount", "ranges", "fromStart", "isRendered", "perc", "getParent", "isDOM", "obj", "min", "max", "pending", "color", "hiddenStyles", "el", "show", "progress_component_default", "hideCount", "addEventListeners", "timeout", "e", "finish", "setupProgress", "includeCSS", "showSpinner", "shouldIntercept", "isLink", "router", "import_lodash", "import_lodash", "remember", "rememberKey", "restored", "router", "rememberable", "key", "hasCallbacks", "data", "cloneDeep", "remember_default", "useForm", "rememberKeyOrData", "maybeData", "defaults", "cancelToken", "recentlySuccessfulTimeoutId", "transform", "form", "reactive", "carry", "callback", "fieldOrFields", "maybeValue", "fields", "resolvedData", "clonedData", "field", "method", "url", "options", "_options", "token", "visit", "event", "page", "onSuccess", "errors", "watch", "newValue", "isEqual", "component", "ref", "layout", "shallowRef", "headManager", "App", "defineComponent", "title", "initialPage", "initialComponent", "resolveComponent", "titleCallback", "onHeadUpdate", "markRaw", "isServer", "createHeadManager", "args", "child", "h", "app_default", "plugin", "app", "usePage", "computed", "createInertiaApp", "id", "resolve", "setup", "progress", "render", "el", "name", "module", "head", "vueApp", "elements", "setupProgress", "body", "createSSRApp", "deferred_default", "keys", "Head", "node", "attrs", "value", "html", "tag", "nodes", "head_default", "Link", "_visit", "props", "slots", "inFlightCount", "hoverTimeout", "prefetchModes", "cacheForValue", "onMounted", "prefetch", "onUnmounted", "as", "mergeDataArray", "mergeDataIntoQueryString", "href", "elProps", "baseParams", "visitParams", "regularEvents", "shouldIntercept", "prefetchHoverEvents", "prefetchClickEvents", "link_default", "usePoll", "interval", "requestOptions", "stop", "start", "usePrefetch", "isPrefetching", "lastUpdatedAt", "isPrefetched", "cached", "inFlight", "onPrefetchedListener", "onPrefetchingListener", "e", "useRemember", "type", "isReactive", "remembered", "whenVisible_default", "entries", "reloadParams", "els"]
}
